{"author":{"id":"ce6db63116a19753f769cce73b0e6f303cfd6d6e6002df6235a17f0dca508558"},"ops":[{"type":3,"timestamp":1723570233,"nonce":"mtczTN4vcGW3tTjB51OyBazRr+s=","metadata":{"github-id":"IC_kwDOJl1IZM6ITU8I","github-url":"https://github.com/nikitabobko/AeroSpace/issues/368#issuecomment-2286767880"},"message":"\u003e Thanks for sharing your vision!\n\u003e \n\u003e \u003e default-node-max-width\n\u003e \n\u003e I'm curious if is it a mistake or is it intentional? The definition of \"node\" includes windows and containers. Restricting nodes max width will effectively restrict the root container width, which is no different from having big gaps.\n\n\u003e My vision was different. I planned to introduce `windows-max-width`, and it would restrict only windows width, leaving containers width flexible. I lean towards restricting windows width because the more windows you have, the bigger becomes the total max width restriction (which should work nicely for the ultrawide monitor use case). Though I just realized that this vision has unfortunate feature interaction with mouse resizing.\n\nI think the question is what we want to happen if the monitor width is larger than twice the max width. The first window will definitely be centered. What happens when the second window is added. Are both windows centered on the screen, or are both windows centered in their nodes, so effectively have a big gap between them? In effect this is the difference between css justify-content: centered or justify-content: space-between. I think strongly that centered is better. \n\n\u003e Another thing is where to store \"max width restriction\". According to your description, you want to store it in the nodes/windows themselves. This way it's possible to resize nodes/windows independently\n\u003e \n\u003e My vision was to have as many `windowsMaxWidth` as many monitors there are, and disallow resizing bigger than max width.\n\u003e \n\u003e Since the primary use case is to improve experience for ultrawide monitors, it feels natural to me that `windowsMaxWidth` is a property of every monitor. And your idea to store \"windows max width\" in windows themselves isn't yet intuitive to me.\n\n\u003e \n\u003e I understand that \"isn't yet intuitive to me\" is a bad argument, and I will try add a comment later when I realize it. Maybe my intuition is afraid that every window will now have a property that is not directly observable (which feels too chaotic and random), or maybe it's something different, I didn't realize it yet.\n\nI think the case where the value will be overwritten will be pretty rare, so maybe your intuition is right. I'm thinking that web browsers should be max 1280px for most websites to look good, but sometimes you really want it to be wider using a specific website. This should just be possible without turning off the global setting. \n\n\n\n\u003e \n\u003e \u003e We introduce a new layout command `layout tiling-fullwidth` that allows for hotkeys that disable the constraint.\n\u003e \n\u003e What would be the use case for disabling the constraint?\n\nSimilar to the above: if you give a presentation in google slides, or are in a video chat that's best looked at full width screen. It would be bad if you have to turn off aerospace because you use a tool that needs the entire screen. \n\n\u003e \u003e resize should learn to set maxwidth for nodes specifically like `resize max-width 800`, this enables setting some types of windows to be constrained by default like so:\n\u003e \n\u003e And I afraid that possibility to set `max-width` for every specific window encourages too much tinkering. I still yet lean more towards \"windows max width per monitor\" approach.\n\nTotally losing the ability to make any window fullscreen feels challenging in day to day. VSCode flow state sessions, fullscreen presentations, fullscreen youtube video, IA Writer in zen mode, Video games in windowed mode. All those are things I wanted to temporarily use more than 1280px for a window recently. But maybe there is a simpler way to accomplish this?","files":null}]}