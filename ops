{"author":{"id":"9006205d7e210990dd597a6791ceb19005a9c2879cb6e514c850aedc184b31c2"},"ops":[{"type":6,"timestamp":1725054994,"nonce":"Fjmlgb471nCgUF2EG7juWmHuSNM=","metadata":{"github-id":"UCE_lAHOJl1IZM6U5o9GzmN-2WI"},"target":"01dd02bda7bff6a7c77669ec7a6a361c36eaf11d73801dc07ca99e44890b0be1","message":"The startup at login routine for configuring the launch agent plist \u0026 loading/unloading it is technically not working as intended.\n\n### The Bug\n\nBoth the commands to [load and unload](https://github.com/nikitabobko/AeroSpace/blob/main/Sources/AppBundle/config/startAtLogin.swift#L27-L31) the plist fail with IO errors as the paths given to them aren't valid - thus the agent is never loaded or unloaded by the app.\n\n`url.absoluteString` keeps the `file://` scheme from the URL instance that is created to locate the plist. launchctl just expects a plain path. To *correct* this behavior `URL.path` should be used instead. However this introduces a messier bug - more on this below.\n\nThe reason this behavior still works as well as it does is because the plist is written/deleted when app starts up/reloads config depending on the `start-at-login` value. When you next log in, the plist is automatically loaded by launchd or is missing so cannot be launched.\n\nRunning AeroSpaceApp from the terminal shows the following errors:\n```sh\n# output when the load fails:\nLoad failed: 5: Input/output error\nTry running `launchctl bootstrap` as root for richer errors.\n\n# output when unload fails:\nUnload failed: 5: Input/output error\nTry running `launchctl bootstrap` as root for richer errors.\n```\nYou can see slightly more detailed info in the launchd logs:\n```sh\n# here's one such example for a failed 'load'\n2024-08-30 16:58:28.718503 (gui/501 [100018]) \u003cNotice\u003e: Bootstrap by launchctl[21729] for //file:///Users/jake/Library/LaunchAgents/bobko.aerospace.plist failed (2: No such file or directory)\n```\n\n### The Messy Bug\nWhen `launchctl load some.plist` is ran and `RunAtLoad` is `true` in the plist, the program is immediately executed - this creates a second instance of AeroSpace and then everything gets wild. Hotkeys are handled twice, windows are moved erratically, and things become generally unpredictable. In my specific scenario, I had things set up in such a way that both instances were fighting over a window and I couldn't focus my terminal to kill the app. Don't ask me how because I'm not sure.\n\nThere are many solutions to this problem, such as a seperate startup helper app, creating a lockfile to ensure single instances etc. However I feel this is overkill, at least for a first pass solution.\n\nI think for now, it's safe to remove the calls to launchctl and just rely on the [lack of] presence of the plist and let macos do it's thing on login.\n\nAs an aside, truly fixing the launchd integration could bring benefits such as auto restarting the app after an update. #352\n\nSorry for the verbosity of this bug report. It's been a long day :)\n\n## Checklist\n\n- [X] I've searched for duplicates. My search queries were (please don't forget to search in closed issues too):\n  - \"log in\"\n  - \"start-at-login\"\n  - \"launchd\"\n- [ ] I've read the documentation https://nikitabobko.github.io/AeroSpace/guide \u0026 https://nikitabobko.github.io/AeroSpace/commands\n  - N/A\n- [ ] I've searched in the documentation. My search queries were:\n  - N/A\n\n```\naerospace CLI client version: 0.14.1-Beta 5861e85b65cb7dc914a0a68027c56e2bc90510fd\nAeroSpace.app server version: 0.14.1-Beta 5861e85b65cb7dc914a0a68027c56e2bc90510fd\n```\nAlso happens on main as of 9d8362d04f449c4fdaab0fb2d305e6fe0f4ca48a","files":null},{"type":6,"timestamp":1725096700,"nonce":"sW1P2A3QP+vEHQL1BesM1yu4Ik8=","metadata":{"github-id":"UCE_lAHOJl1IZM6U5o9GzmODHK4"},"target":"01dd02bda7bff6a7c77669ec7a6a361c36eaf11d73801dc07ca99e44890b0be1","message":"The startup at login routine for configuring the launch agent plist \u0026 loading/unloading it is technically not working as intended.\n\n### The Bug\n\nBoth the commands to [load and unload](https://github.com/nikitabobko/AeroSpace/blob/main/Sources/AppBundle/config/startAtLogin.swift#L27-L31) the plist fail with IO errors as the paths given to them aren't valid - thus the agent is never loaded or unloaded by the app.\n\n`url.absoluteString` keeps the `file://` scheme from the URL instance that is created to locate the plist. launchctl just expects a plain path. To *correct* this behavior `URL.path` should be used instead. However this introduces a messier bug - more on this below.\n\nThe reason this behavior still works as well as it does is because the plist is written/deleted when app starts up/reloads config depending on the `start-at-login` value. When you next log in, the plist is automatically loaded by launchd or is missing so cannot be launched.\n\nRunning AeroSpaceApp from the terminal shows the following errors:\n```sh\n# output when the load fails:\nLoad failed: 5: Input/output error\nTry running `launchctl bootstrap` as root for richer errors.\n\n# output when unload fails:\nUnload failed: 5: Input/output error\nTry running `launchctl bootout` as root for richer errors.\n```\nYou can see slightly more detailed info in the launchd logs:\n```sh\n# here's one such example for a failed 'load'\n2024-08-30 16:58:28.718503 (gui/501 [100018]) \u003cNotice\u003e: Bootstrap by launchctl[21729] for //file:///Users/jake/Library/LaunchAgents/bobko.aerospace.plist failed (2: No such file or directory)\n```\n\n### The Messy Bug\nWhen `launchctl load some.plist` is ran and `RunAtLoad` is `true` in the plist, the program is immediately executed - this creates a second instance of AeroSpace and then everything gets wild. Hotkeys are handled twice, windows are moved erratically, and things become generally unpredictable. In my specific scenario, I had things set up in such a way that both instances were fighting over a window and I couldn't focus my terminal to kill the app. Don't ask me how because I'm not sure.\n\nThere are many solutions to this problem, such as a seperate startup helper app, creating a lockfile to ensure single instances etc. However I feel this is overkill, at least for a first pass solution.\n\nI think for now, it's safe to remove the calls to launchctl and just rely on the [lack of] presence of the plist and let macos do it's thing on login.\n\nAs an aside, truly fixing the launchd integration could bring benefits such as auto restarting the app after an update. #352\n\nSorry for the verbosity of this bug report. It's been a long day :)\n\n## Checklist\n\n- [X] I've searched for duplicates. My search queries were (please don't forget to search in closed issues too):\n  - \"log in\"\n  - \"start-at-login\"\n  - \"launchd\"\n- [ ] I've read the documentation https://nikitabobko.github.io/AeroSpace/guide \u0026 https://nikitabobko.github.io/AeroSpace/commands\n  - N/A\n- [ ] I've searched in the documentation. My search queries were:\n  - N/A\n\n```\naerospace CLI client version: 0.14.1-Beta 5861e85b65cb7dc914a0a68027c56e2bc90510fd\nAeroSpace.app server version: 0.14.1-Beta 5861e85b65cb7dc914a0a68027c56e2bc90510fd\n```\nAlso happens on main as of 9d8362d04f449c4fdaab0fb2d305e6fe0f4ca48a","files":null}]}