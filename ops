{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":3,"timestamp":1723397614,"nonce":"MMcZbhILuyMcvWcv4B7b3BlFa7k=","metadata":{"github-id":"IC_kwDOJl1IZM6IEUY2","github-url":"https://github.com/nikitabobko/AeroSpace/issues/378#issuecomment-2282833462"},"message":"No, it's not possible, and I don't believe it will ever be possible. Monitors contain workspaces, workspaces contain windows. The whole structure forms a tree. It's a strong invariant that a lot of logic is built on top of. And it would be extremely hard to change this logic, and it would be a breaking change of some of the existing functionality. It may be easier to build a new window manager with this functionality than changing AeroSpace.\n\nConsider the following feature interactions:\n- `aerospace list-windows --format %{workspace}` will break\n- What if the window belongs to workspace that are simultaneously visible on the both of the monitors? It's not possible to render window twice at the same time\n- The \"duplicated window\" may have different sizes on different workspaces. Switching between the workspaces will lead to the window jiggering.\n- What workspace should get activated if the user switches to the window via cmd-tab?\n- `move-node-to-workspace` will either have to change its semantics or it will become semantically broken\n- etc...\n\nBy allowing windows to belong to several workspaces, the structure stops being a tree and becomes a graph. And graphs are noticably more complicated to deal with than trees (both from the implementation perspective and users perspective)\n\nI also speak from my experience, I once was a AwesomeWM user on Linux. AwesomeWM allows windows to belong to several workspaces, and I don't remember it being useful \n\nYour best bet is \"sticky windows\". Sticky windows belong not to the workspaces but directly to the monitors #2 \n\nSorry, but I am closing the issue. This \"limitation\" is something that we have to accept.","files":null},{"type":4,"timestamp":1723397614,"nonce":"Onam5Lm5cBszsyTxKSR8rWNzRag=","metadata":{"github-id":"CE_lADOJl1IZM6Sm42EzwAAAAM4uPcD"},"status":2}]}