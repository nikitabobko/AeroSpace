{"author":{"id":"33f097a486cce9e3951dd87985f77934041e574c5ee58a1d3e6552676ac73664"},"ops":[{"type":3,"timestamp":1742502287,"nonce":"VkoOFY6zpvFmEpL++NwkfvzZhlM=","metadata":{"github-id":"IC_kwDOJl1IZM6jaTcn","github-url":"https://github.com/nikitabobko/AeroSpace/issues/68#issuecomment-2741581607"},"message":"\u003e Correct me if I'm wrong but I believe the AltTab implementation uses a private API in `CGSCopyWindowsWithOptionsAndTags`. One of the stated project values of AeroSpace is to avoid things like private APIs as much as possible so I wouldn't expect [@nikitabobko](https://github.com/nikitabobko) to accept a PR copying the AltTab implementation over - though I'd be happy to be proven wrong\n\u003e \n\u003e I think for aerospace a great option would be to just have a `mark-tab` API similar to what [@FormalSnake](https://github.com/FormalSnake) described, to mark a given window as belonging to a tab. That could help to incrementally work towards a solution for this. `mark-tab` as an API could allow one to set up a global keybinding for cmd-t that runs something like `aerospace mark-tab --focused \u0026\u0026 osascript new_tab.scpt \u0026\u0026 aerospace mark-tab --focused --join-with-last` where the `new_tab.scpt` uses the New Tab menu bar item of the app to make a new tab. It wouldn't be perfect but the same thing could later be used if keybindings per app get implemented\n\nWould it be possible to implement a quick fix that uses private APIs in a separate branch, letting people build it manually if they desire?","files":null}]}