{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":6,"timestamp":1742129115,"nonce":"v2rKpJdO6N4i+o3u+N5NvvHe3rY=","metadata":{"github-id":"UCE_lAHOJl1IZM6uOYKPznSoEeA"},"target":"cd36216a2f9a7519897a00e218bce7a8f598910e28ec4651e879fe1d899531f1","message":"There are two cases when it's possible:\n\n**1.** When you unlock the screen. Caused by: https://github.com/nikitabobko/AeroSpace/issues/445 It's because the current algorithm of saving state before the screen is locked is incorrect. To fix it, we should make `TreeNode` immutable https://github.com/nikitabobko/AeroSpace/issues/1215, which will make it a breath to take snapshots of the tree on its every modification before windows start \"dying out\" when the screen is locked.\n\n**2.** During high CPU usage / when apps are slow at responding AX requests. When AeroSpace checks for dead windows, it doesn't distinguish between long responses and `nil` response. Though it's a hypothesis, which should be investigated","files":null},{"type":6,"timestamp":1742129788,"nonce":"eDNcuJYzcL6cd/Pkq/LelEHe2Vg=","metadata":{"github-id":"UCE_lAHOJl1IZM6uOYKPznSoJIM"},"target":"cd36216a2f9a7519897a00e218bce7a8f598910e28ec4651e879fe1d899531f1","message":"There are two cases when it's possible:\n\n**1.** When you unlock the screen. It's because the current algorithm of saving state before the screen is locked is incorrect. To fix it, we should make `TreeNode` immutable https://github.com/nikitabobko/AeroSpace/issues/1215, which will make it a breath to take snapshots of the tree on its every modification before windows start \"dying out\" when the screen is locked.\n\n**2.** During high CPU usage / when apps are slow at responding AX requests. When AeroSpace checks for dead windows, it doesn't distinguish between long responses and `nil` response. Though it's a hypothesis, which should be investigated\n\nBoth of the issue are caused by https://github.com/nikitabobko/AeroSpace/issues/445","files":null},{"type":6,"timestamp":1742129816,"nonce":"SUCacxSM1h1e+iu1/76celXmbwY=","metadata":{"github-id":"UCE_lAHOJl1IZM6uOYKPznSoJTI"},"target":"cd36216a2f9a7519897a00e218bce7a8f598910e28ec4651e879fe1d899531f1","message":"There are two cases when it's possible:\n\n**1.** When you unlock the screen. It's because the current algorithm of saving state before the screen is locked is incorrect. To fix it, we should make `TreeNode` immutable https://github.com/nikitabobko/AeroSpace/issues/1215, which will make it a breath to take snapshots of the tree on its every modification before windows start \"dying out\" when the screen is locked.\n\n**2.** During high CPU usage / when apps are slow at responding AX requests. When AeroSpace checks for dead windows, it doesn't distinguish between long responses and `nil` response. Though it's a hypothesis, which should be investigated\n\nBoth of the issue are caused by https://github.com/nikitabobko/AeroSpace/issues/445 (sinc 0.16.0-Beta)","files":null},{"type":6,"timestamp":1742129822,"nonce":"vMqHuVwf+An4DMUoY/jXmez43tY=","metadata":{"github-id":"UCE_lAHOJl1IZM6uOYKPznSoJWs"},"target":"cd36216a2f9a7519897a00e218bce7a8f598910e28ec4651e879fe1d899531f1","message":"There are two cases when it's possible:\n\n**1.** When you unlock the screen. It's because the current algorithm of saving state before the screen is locked is incorrect. To fix it, we should make `TreeNode` immutable https://github.com/nikitabobko/AeroSpace/issues/1215, which will make it a breath to take snapshots of the tree on its every modification before windows start \"dying out\" when the screen is locked.\n\n**2.** During high CPU usage / when apps are slow at responding AX requests. When AeroSpace checks for dead windows, it doesn't distinguish between long responses and `nil` response. Though it's a hypothesis, which should be investigated\n\nBoth of the issue are caused by https://github.com/nikitabobko/AeroSpace/issues/445 (since 0.16.0-Beta)","files":null},{"type":5,"timestamp":1742129048,"nonce":"QQN6uV2GM1iCR2F4cdXGRxEFo9A=","metadata":{"github-id":"LE_lADOJl1IZM6uOYKPzwAAAAPozfnN"},"added":["bug"],"removed":[]}]}