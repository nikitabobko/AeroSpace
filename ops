{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":1,"timestamp":1720166055,"nonce":"i1QUAgl+3G8e7p4+C37vaKmbS1k=","metadata":{"github-id":"I_kwDOJl1IZM6Ok-8o","github-url":"https://github.com/nikitabobko/AeroSpace/issues/316","origin":"github"},"title":"`on-workspace-touched`/`on-workspace-redraw` callback","message":"The proposal is to introduce `on-workspace-touched` callback. When the workspace is updated in any way (focused changed to/from the workspace, children are attached/removed, ~~name/tag is changed (oh,fuck)~~)\n\nUse case:\n```toml\non-workspace-touched = 'echo %{workspace-mru-app-name} | xargs rename-workspace --tag'\n```\n\nIt'd require introduction of `workspace-mru-app-name` interpolation variable (\"MRU\" stands for \"most recently used\")\n\n**Alternative name:** `on-workspace-used` (similar to \"MRU\")\n\n**Alternative.** Allow interpolation variables directly inside `rename-workspace`? `rename-workspace --tag %{workspace-mru-app-name}`. Then, for the consistency, they should be allowed in literally all commands. `workspace %{next-workspace}`, `focus --window-id %{left-window-id}`, etc. jeez\n\n**Problem.** Any command run inside the callback will probably change the workspace again. `rename-workspace` changes the workspace, which leads to infinite loop.\n\nPossible solutions:\n- More fine-grained callback. `on-workspace-children-changed` (sounds too specific. Is it useful in general case?)\n- Detect changes from the callback itself, and don't retrigger recursively. **Sounds the most promising**\n- ~~Don't do anything with this problem. Assume that the script inside is idempotent, which will cause recursion only once~~ I completely dislike it. At least because commands need to make sure no to call the callback if they detect that they noop\n\n**Depends on:** #245 #278","files":null}]}