{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":6,"timestamp":1704548648,"nonce":"i8ebmmbLno08hSf66rCDTTxM+Xs=","metadata":{"github-id":"UCE_lAHOJl1IZM57TOyRzlF1Q64"},"target":"7adbc22c82ac3c27df0b120c4730abd12334a89dc6097da78b195d59d897f03a","message":"Users tend to write callbacks like this:\n```toml\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace 2'\n```\n\nThe problem with callbacks like this is that if during the work, users move the window to a different workspace, and then decide to open some dialog, the dialog will be moved back to workspace 2\n\nIt would be nice to make it possible to ignore \"workspace assignment\" callbacks for dialogs. \n\n1. One way of doing this could be to introduce `if.is-dialog`. The problem with this solution is that it is not \"enabled\" by default. Users would need to remember that they always need to write `if.is-dialog = false`\n2. Another crazy solution could be to introduce an option for `move-node-to-workspace` command `[--if-dialog [no]]`. And say that `--if-dialog no` is enabled by default in `on-window-detected` callback","files":null},{"type":6,"timestamp":1704548664,"nonce":"KzA7F8CXTtTzu2eCfhj/xo+5dIg=","metadata":{"github-id":"UCE_lAHOJl1IZM57TOyRzlF1Q-s"},"target":"7adbc22c82ac3c27df0b120c4730abd12334a89dc6097da78b195d59d897f03a","message":"Users tend to write callbacks like this:\n```toml\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace 2'\n```\n\nThe problem with callbacks like this is that if during the work, users move the window to a different workspace, and then decide to open some dialog, the dialog will be moved back to workspace 2\n\nIt would be nice to make it possible to ignore \"workspace assignment\" callbacks for dialogs. \n\n1. One way of doing this could be to introduce `if.is-dialog` in `on-window-detected` callback. The problem with this solution is that it is not \"enabled\" by default. Users would need to remember that they always need to write `if.is-dialog = false`\n2. Another crazy solution could be to introduce an option for `move-node-to-workspace` command `[--if-dialog [no]]`. And say that `--if-dialog no` is enabled by default in `on-window-detected` callback","files":null},{"type":6,"timestamp":1704548943,"nonce":"NyJIdw25xQ3K/Wz2TPUZl1Aheoc=","metadata":{"github-id":"UCE_lAHOJl1IZM57TOyRzlF1SIw"},"target":"7adbc22c82ac3c27df0b120c4730abd12334a89dc6097da78b195d59d897f03a","message":"Users tend to write \"naive\" workspace assignment callbacks like this:\n```toml\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace 2'\n```\n\nThe problem with callbacks like this is that if during the work, users move the window to a different workspace, and then decide to open some dialog, the dialog will be moved back to workspace 2\n\nIt would be nice to make it possible to ignore \"workspace assignment\" callbacks for dialogs. \n\n1. One way of doing this could be to introduce `if.is-dialog` in `on-window-detected` callback. The problem with this solution is that it is not \"enabled\" by default. Users would need to remember that they always need to write `if.is-dialog = false`\n2. Another crazy solution could be to introduce an option for `move-node-to-workspace` command `[--only-tiling [no]]`. And say that `--only-tiling` is enabled by default for `move-node-to-workspace` command in `on-window-detected` callback. This way the naive callback will magically work \"as expected\". The downside is that this solution might too \"magical\". It introduces a special treatment for `move-node-to-workspace` in callbacks which is not good","files":null},{"type":6,"timestamp":1704549101,"nonce":"33pQh1da5j+9UbQHzGDVr/A7YgU=","metadata":{"github-id":"UCE_lAHOJl1IZM57TOyRzlF1S1A"},"target":"7adbc22c82ac3c27df0b120c4730abd12334a89dc6097da78b195d59d897f03a","message":"Users tend to write \"naive\" workspace assignment callbacks like this:\n```toml\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace 2'\n```\n\nThe problem with callbacks like this is that if during the work, users move the window to a different workspace, and then decide to open some dialog, the dialog will be moved back to workspace 2\n\nIt would be nice to make it possible to ignore \"workspace assignment\" callbacks for dialogs. \n\n1. One way of doing this could be to introduce `if.is-dialog` in `on-window-detected` callback. The problem with this solution is that it is not \"enabled\" by default. Users would need to remember that they always need to write `if.is-dialog = false`\n2. Another crazy solution could be to introduce an option for `move-node-to-workspace` command `[--only-tiling [no]]`. And say that `--only-tiling` is enabled by default for `move-node-to-workspace` command in `on-window-detected` callback. This way the naive callback will magically work \"as expected\". The downside is that this solution might be too \"magical\". It introduces a special treatment for `move-node-to-workspace` in callbacks which is not good","files":null},{"type":6,"timestamp":1704549199,"nonce":"3CKj7N66DazqS6+fkT2BslOiWb8=","metadata":{"github-id":"UCE_lAHOJl1IZM57TOyRzlF1TRI"},"target":"7adbc22c82ac3c27df0b120c4730abd12334a89dc6097da78b195d59d897f03a","message":"Users tend to write \"naive\" workspace assignment callbacks like this:\n```toml\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace 2'\n```\n\nThe problem with callbacks like this is that if during the work, users move the window to a different workspace, and then decide to open some dialog, the dialog will be moved back to workspace 2\n\nIt would be nice to make it possible to ignore \"workspace assignment\" callbacks for dialogs. \n\n1. One way of doing this could be to introduce `if.is-dialog` in `on-window-detected` callback. The problem with this solution is that it is not \"enabled\" by default. Users would need to remember that they always need to write `if.is-dialog = false`\n2. Another crazy solution could be to introduce an option for `move-node-to-workspace` command `[--only-tiling [no]]`. And say that `--only-tiling` is enabled by default for `move-node-to-workspace` command in `on-window-detected` callback. This way the naive callback will magically work \"as expected\". The downside is that this solution might be too \"magical\". It introduces a special treatment for `move-node-to-workspace` in callbacks which is not good\n\nSuggestions and ideas are welcome","files":null},{"type":6,"timestamp":1704550339,"nonce":"y/Z+OTHEtCmge5PLxgyQwPxfmXk=","metadata":{"github-id":"UCE_lAHOJl1IZM57TOyRzlF1ZGs"},"target":"7adbc22c82ac3c27df0b120c4730abd12334a89dc6097da78b195d59d897f03a","message":"Users tend to write \"naive\" workspace assignment callbacks like this:\n```toml\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace 2'\n```\n\nThe problem with callbacks like this is that if during the work, users move the window to a different workspace, and then decide to open some dialog, the dialog will be moved back to workspace 2\n\nIt would be nice to make it possible to ignore \"workspace assignment\" callbacks for dialogs. \n\n1. One way of doing this could be to introduce `if.is-tiled-by-default` in `on-window-detected` callback. The problem with this solution is that it is not \"enabled\" by default. Users would need to remember that they always need to write `if.is-tiled-by-default = true`\n2. Another crazy solution could be to introduce an option for `move-node-to-workspace` command `[--only-tiling [no]]`. And say that `--only-tiling` is enabled by default for `move-node-to-workspace` command in `on-window-detected` callback. This way the naive callback will magically work \"as expected\". The downside is that this solution might be too \"magical\". It introduces a special treatment for `move-node-to-workspace` in callbacks which is not good\n\nSuggestions and ideas are welcome","files":null},{"type":6,"timestamp":1704550831,"nonce":"b+YZ/bxPBuKh/jDsuSB09J2CeX4=","metadata":{"github-id":"UCE_lAHOJl1IZM57TOyRzlF1bw4"},"target":"7adbc22c82ac3c27df0b120c4730abd12334a89dc6097da78b195d59d897f03a","message":"Users tend to write \"naive\" workspace assignment callbacks like this:\n```toml\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace 2'\n```\n\nThe problem with callbacks like this is that if during the work, users move the window to a different workspace, and then decide to open some dialog, the dialog will be moved back to workspace 2\n\nIt would be nice to make it possible to ignore \"workspace assignment\" callbacks for dialogs. \n\n1. One way of doing this could be to introduce `if.is-tiled-by-default` in `on-window-detected` callback. The problem with this solution is that it is not \"enabled by default\". Users would need to remember that they always need to write `if.is-tiled-by-default = true`\n2. Another crazy solution could be to introduce an option for `move-node-to-workspace` command `[--only-tiling [no]]`. And say that `--only-tiling` is enabled by default for `move-node-to-workspace` command in `on-window-detected` callback. This way the naive callback will magically work \"as expected\". The downside is that this solution might be too \"magical\". It introduces a special treatment for `move-node-to-workspace` in callbacks which is not good\n\nSuggestions and ideas are welcome","files":null},{"type":5,"timestamp":1704549006,"nonce":"qR7JbaMZ3EFXtA2hTHg8stjvYyU=","metadata":{"github-id":"LE_lADOJl1IZM57TOyRzwAAAAKoAPUT"},"added":["design-needed"],"removed":[]},{"type":2,"timestamp":1704549060,"nonce":"3kvur/C9dZfxj9riWEMyQoW/QxY=","metadata":{"github-id":"RTE_lADOJl1IZM57TOyRzwAAAAKoAPof"},"title":"Feature request: make it possible to ignore \"workspace assignments\" for non-tiling windows","was":"Feature request: make it possible to ignore \"workspace assignments\" for non-tiling windows"},{"type":3,"timestamp":1704550151,"nonce":"9sU+MXh9aFw2VyKla8vHxPY2MwY=","metadata":{"github-id":"IC_kwDOJl1IZM5wCetc","github-url":"https://github.com/nikitabobko/AeroSpace/issues/103#issuecomment-1879698268"},"message":"Right now, I lean towards the solution 2 rather than the solution 1\n\nI like to think that `on-window-detected` callback is the thing that considers different cases of [ADT](https://en.wikipedia.org/wiki/Algebraic_data_type). `if.is-dialog = false` will skip the callback, and AeroSpace will try to apply further callbacks. But the expected behavior is to stop searching for further callbacks","files":null},{"type":6,"timestamp":1704550351,"nonce":"0KKeoS74uZqqve1x56crsg9XnD0=","metadata":{"github-id":"UCE_lALOJl1IZM5wCetczj2f1DQ"},"target":"5a69c92bb5347f56f49c0f5ba5c65e06856b17b039be8c17c5ff1fbf148b4855","message":"Right now, I lean towards the solution 2 rather than the solution 1\n\nI like to think that `on-window-detected` callback is the thing that considers different cases of [ADT](https://en.wikipedia.org/wiki/Algebraic_data_type). `if.is-tiled-by-default = true` will skip the callback, and AeroSpace will try to apply further callbacks. But the expected behavior is to stop searching for further callbacks","files":null},{"type":3,"timestamp":1704550669,"nonce":"ppSWMfaShdeIRvdRPFsIk6UcJYo=","metadata":{"github-id":"IC_kwDOJl1IZM5wCfK5","github-url":"https://github.com/nikitabobko/AeroSpace/issues/103#issuecomment-1879700153"},"message":"On the other hand, if users use \"floating\" by default, and then per selected apps say that the apps are tiling then `if.is-tiled-by-default = true` would be exactly what they need\n\nMaybe both solutions need to be implemented\n\nBTW, it would be cool to come up with a better name. `if.is-tiled-by-default` is ugly","files":null}]}