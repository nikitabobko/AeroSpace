{"author":{"id":"c0099460253018dea0db793e6b46e0385be9dc548f73098d8519471a6bc462c4"},"ops":[{"type":6,"timestamp":1718050907,"nonce":"lGMqfil5kmm1zoMBEOXj7vyw0fg=","metadata":{"github-id":"UCE_lAHOJl1IZM6LtQaHzl0c84w"},"target":"8cca093c5eaa64927af4989c28fd90c6771c929b91bb3c26e9e79aa6bf77425d","message":"Hi! First of all, kudos for creating such awesome tool! I tried to use yabai in the past, but couldn't bear native worspace switching speed (even with reduced animations), compared to i3. AeroSpace's virtual workspaces work extremely fast in comparison.\n\n### Use-case\n\nI'd like to bind alt-tab/alt-shift-tab to cycle through all workspaces, regardless of monitor. This can be solved like that:\n```toml\nalt-tab = 'exec-and-forget aerospace list-workspaces --all | aerospace workspace --wrap-around next'\nalt-shift-tab = 'exec-and-forget aerospace list-workspaces --all | aerospace workspace --wrap-around prev'\n```\n\nHowever, this adds significant delay: ~30-50ms for listing workspaces, and 50+ ms for spawning bash and piping/calling `aerospace workspace`.\n\nHaving static list of workspaces, `aerospace list-workspaces --all` can be replaced with `seq 1 9` or even static `echo $'1\\n2\\n...'`, however this does not eliminate overhead of spawning subprocesses and calling `aerospace` CLI, which becomes noticeable, because I navigate workspaces in that way quite a lot.\n\n### Proposal\n\nArgument `--all`  could be added to `workspace (next|prev)` syntax to implement this kind of behaviour (similar to `list-(windows|workspaces)`)\n\nI'd be happy to submit a PR if you're okay with such feature.","files":null}]}