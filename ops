{"author":{"id":"01f152ae938da35795aa0ae808abb914ef5b1b2d917d6f70c2fc8d80265a73e8"},"ops":[{"type":3,"timestamp":1708352945,"nonce":"A/OW/vo5RC2PQzJbIzBdETLTiw4=","metadata":{"github-id":"IC_kwDOJl1IZM50Ycqi","github-url":"https://github.com/nikitabobko/AeroSpace/issues/162#issuecomment-1952565922"},"message":"\u003e Your alternative is to rename workspaces to `01`, `02`, ..., `10`\n\nI've thought about that workaround and got a significantly wider tray icon for just fixing the order, and I don't think it's worth it.\nActually I think a better workaround would be removing `10`.\n\n\u003e I'm not sure that I want to use `localizedStandardCompare`. It sounds too magical. The semantics of the API is not clear\n\nYou're right, that's why I only recommend to use it for UI purposes. For other purposes, I guess you won't need to change the current sorting mechanism if it works well for you.","files":null},{"type":6,"timestamp":1708352983,"nonce":"Z2ue+Hfy7CoXaI8ovxL3U/sCAIg=","metadata":{"github-id":"UCE_lALOJl1IZM50YcqizkBbYA0"},"target":"6b1eda1eab4bbcf94d36d0d24e530d9d3c59669a88874ac8c6e2f569a2a9c70e","message":"\u003e Your alternative is to rename workspaces to `01`, `02`, ..., `10`\n\nI've thought about that workaround and got a significantly wider tray icon for just fixing the order, and I don't think it's worth it.\nActually I think a better workaround would be removing `10`.\n\n\u003e I'm not sure that I want to use `localizedStandardCompare`. It sounds too magical. The semantics of the API is not clear\n\nYou're right, that's why I only recommend to use it for UI purposes (and it works pretty well actually). For other purposes, I guess you won't need to change the current sorting mechanism if it works well for you.","files":null},{"type":3,"timestamp":1717897609,"nonce":"/6uWdV3qly1FiDcWHRxqKwMLnG4=","metadata":{"github-id":"IC_kwDOJl1IZM6Ahf0r","github-url":"https://github.com/nikitabobko/AeroSpace/issues/162#issuecomment-2156264747"},"message":"\u003e I'm not sure that I want to use `localizedStandardCompare`. It sounds too magical. The semantics of the API is not clear\n\n@nikitabobko I just did a bit more research, and the source code is [here](https://github.com/apple/swift-corelibs-foundation/blob/d7c868a21d086711de2cca72e619d4e8ce6bed49/Sources/Foundation/NSString.swift#L462):\n\n```swift\n    public func localizedStandardCompare(_ string: String) -\u003e ComparisonResult {\n        return compare(string, options: [.caseInsensitive, .numeric, .widthInsensitive, .forcedOrdering], range: NSRange(location: 0, length: length), locale: Locale.current._bridgeToObjectiveC())\n    }\n```\n\nThere are indeed many options involved, and many unrelated to our issue here. However I think `.numeric` does what I'd expect here:\n\n\u003e [static var numeric: NSString.CompareOptions](https://developer.apple.com/documentation/foundation/nsstring/compareoptions/1415530-numeric)\n\u003e Numbers within strings are compared using numeric value, that is, Name2.txt \u003c Name7.txt \u003c Name25.txt.\n_https://developer.apple.com/documentation/foundation/nsstring/compareoptions#1594071_","files":null},{"type":6,"timestamp":1717897622,"nonce":"I3GKkE90Of6i7SygdMKvPSYozTo=","metadata":{"github-id":"UCE_lALOJl1IZM6Ahf0rzkga53c"},"target":"bc5c996b7c8fa4f44b4a030fa7c40429f21294352c4f7d5719843618625fc7db","message":"\u003e I'm not sure that I want to use `localizedStandardCompare`. It sounds too magical. The semantics of the API is not clear\n\n@nikitabobko I just did a bit more research, and the source code is [here](https://github.com/apple/swift-corelibs-foundation/blob/d7c868a21d086711de2cca72e619d4e8ce6bed49/Sources/Foundation/NSString.swift#L462):\n\n```swift\n    public func localizedStandardCompare(_ string: String) -\u003e ComparisonResult {\n        return compare(string, options: [.caseInsensitive, .numeric, .widthInsensitive, .forcedOrdering], range: NSRange(location: 0, length: length), locale: Locale.current._bridgeToObjectiveC())\n    }\n```\n\nThere are indeed many options involved, and many unrelated to our issue here. However I think `.numeric` does what I'd expect here:\n\n\u003e [`static var numeric: NSString.CompareOptions`](https://developer.apple.com/documentation/foundation/nsstring/compareoptions/1415530-numeric)\n\u003e Numbers within strings are compared using numeric value, that is, Name2.txt \u003c Name7.txt \u003c Name25.txt.\n_https://developer.apple.com/documentation/foundation/nsstring/compareoptions#1594071_","files":null},{"type":6,"timestamp":1717897654,"nonce":"/L2PgRnzRmvkA7kZwdwnzYz8830=","metadata":{"github-id":"UCE_lALOJl1IZM6Ahf0rzkga590"},"target":"bc5c996b7c8fa4f44b4a030fa7c40429f21294352c4f7d5719843618625fc7db","message":"\u003e I'm not sure that I want to use `localizedStandardCompare`. It sounds too magical. The semantics of the API is not clear\n\n@nikitabobko I just did a bit more research, and the source code is [here](https://github.com/apple/swift-corelibs-foundation/blob/d7c868a21d086711de2cca72e619d4e8ce6bed49/Sources/Foundation/NSString.swift#L462):\n\n```swift\n    public func localizedStandardCompare(_ string: String) -\u003e ComparisonResult {\n        return compare(string, options: [.caseInsensitive, .numeric, .widthInsensitive, .forcedOrdering], range: NSRange(location: 0, length: length), locale: Locale.current._bridgeToObjectiveC())\n    }\n```\n\nThere are indeed way too many options involved, and most of them are unrelated to our issue here.\n\nHowever I think `.numeric` does what I'd expect here:\n\n\u003e [`static var numeric: NSString.CompareOptions`](https://developer.apple.com/documentation/foundation/nsstring/compareoptions/1415530-numeric)\n\u003e Numbers within strings are compared using numeric value, that is, Name2.txt \u003c Name7.txt \u003c Name25.txt.\n_https://developer.apple.com/documentation/foundation/nsstring/compareoptions#1594071_","files":null},{"type":6,"timestamp":1717897722,"nonce":"imJidT9vWiMpt4QvadK6wWOvB98=","metadata":{"github-id":"UCE_lALOJl1IZM6Ahf0rzkga6KE"},"target":"bc5c996b7c8fa4f44b4a030fa7c40429f21294352c4f7d5719843618625fc7db","message":"\u003e I'm not sure that I want to use `localizedStandardCompare`. It sounds too magical. The semantics of the API is not clear\n\n@nikitabobko I just did a bit more research, and the source code is [here](https://github.com/apple/swift-corelibs-foundation/blob/d7c868a21d086711de2cca72e619d4e8ce6bed49/Sources/Foundation/NSString.swift#L462):\n\n```swift\n    public func localizedStandardCompare(_ string: String) -\u003e ComparisonResult {\n        return compare(string, options: [.caseInsensitive, .numeric, .widthInsensitive, .forcedOrdering], range: NSRange(location: 0, length: length), locale: Locale.current._bridgeToObjectiveC())\n    }\n```\n\nThere are indeed way too many options involved, and most of them are unrelated to our issue here.\n\nHowever I think `.numeric` does what I'd expect here, which should be way more predictable:\n\n\u003e [`static var numeric: NSString.CompareOptions`](https://developer.apple.com/documentation/foundation/nsstring/compareoptions/1415530-numeric)\n\u003e Numbers within strings are compared using numeric value, that is, Name2.txt \u003c Name7.txt \u003c Name25.txt.\n_https://developer.apple.com/documentation/foundation/nsstring/compareoptions#1594071_","files":null}]}