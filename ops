{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":6,"timestamp":1724322163,"nonce":"HUFiOHtkOODEhsM7M+8xrIb46Jc=","metadata":{"github-id":"UCE_lAHOJl1IZM6T2AJ7zmK7-OU"},"target":"6b8189dfdb2d793b230a96e42329dcec2478bc0ad39759d2ccd45decce957d9c","message":"macOS AX callbacks are unreliable. Sometimes windows can close but the `kAXUIElementDestroyedNotification` callback is not invoked (e.g. if user quickly closes several windows in a row)\n\nAeroSpace already checks for new appeared windows on every \"refresh session\" to fight unreliable `kAXWindowCreatedNotification` callback.\n\nThe only window state that AeroSpace doesn't actively check for is when the window is closed. Currently AeroSpace \"forgets\" about windows only if `kAXUIElementDestroyedNotification` is invoked for them.\n\nThe reason for it is because I didn't find yet a reliable way to detect that `AXUIElement` is no longer valid. One approach that I tried before is to check that `_AXUIElementGetWindow` returns `nil`. Unfortunately, `_AXUIElementGetWindow` returns `nil` for every `AXUIElement` when the screen is locked\n\n---\n\nThis issue should fix the problem that sometimes windows are \"stuck\" and AeroSpace things that they still exist when they don't","files":null},{"type":6,"timestamp":1724322238,"nonce":"a4AqVt3OyHnAI7R4STR+bs/1ahw=","metadata":{"github-id":"UCE_lAHOJl1IZM6T2AJ7zmK7_9w"},"target":"6b8189dfdb2d793b230a96e42329dcec2478bc0ad39759d2ccd45decce957d9c","message":"macOS AX callbacks are unreliable. Sometimes windows can close but the `kAXUIElementDestroyedNotification` callback is not invoked (e.g. if user quickly closes several windows in a row)\n\nAeroSpace already checks for new appeared windows on every \"refresh session\" to fight unreliable `kAXWindowCreatedNotification` callback.\n\nThe only window state that AeroSpace doesn't actively check for is when the window is closed. Currently AeroSpace \"forgets\" about windows only if `kAXUIElementDestroyedNotification` is invoked for them.\n\nThe reason for it is because I didn't find yet a reliable way to detect that `AXUIElement` is no longer valid. One approach that I tried before is to check that `_AXUIElementGetWindow` returns `nil`. Unfortunately, `_AXUIElementGetWindow` returns `nil` for every `AXUIElement` when the screen is locked\n\n---\n\nThis issue should fix the problem that sometimes windows are \"stuck\", and AeroSpace thinks that they still exist when they don't","files":null},{"type":6,"timestamp":1728688440,"nonce":"ZZquTw79txSsKD1p+Zq+7seXn90=","metadata":{"github-id":"UCE_lAHOJl1IZM6T2AJ7zmccvGo"},"target":"6b8189dfdb2d793b230a96e42329dcec2478bc0ad39759d2ccd45decce957d9c","message":"macOS AX callbacks are unreliable. Sometimes windows can close but the `kAXUIElementDestroyedNotification` callback is not invoked (e.g. if user quickly closes several windows in a row)\n\nAeroSpace already checks for new appeared windows on every \"refresh session\" to fight unreliable `kAXWindowCreatedNotification` callback.\n\nThe only window state that AeroSpace doesn't actively check for is when the window is closed. Currently AeroSpace \"forgets\" about windows only if `kAXUIElementDestroyedNotification` is invoked for them.\n\nThe reason for it is because I didn't find yet a reliable way to detect that `AXUIElement` is no longer valid. One approach that I tried before is to check that `_AXUIElementGetWindow` returns `nil`. Unfortunately, `_AXUIElementGetWindow` returns `nil` for every `AXUIElement` when the screen is locked\n\n---\n\nThis issue should fix the problem that sometimes windows are \"stuck\", and AeroSpace thinks that they still exist when they don't\n\n---\n\nUPD: In Sequoia, using some apps may cause macOS to (completely?) stop sending `kAXUIElementDestroyedNotification`. Known apps, that interfere with AeroSpace: contexts app, Amazon Q","files":null},{"type":6,"timestamp":1730453541,"nonce":"5GLS4PAwkR18wqMyc1WGKBWMPaA=","metadata":{"github-id":"UCE_lAHOJl1IZM6T2AJ7zmjuwoI"},"target":"6b8189dfdb2d793b230a96e42329dcec2478bc0ad39759d2ccd45decce957d9c","message":"macOS AX callbacks are unreliable. Sometimes windows can close but the `kAXUIElementDestroyedNotification` callback is not invoked (e.g. if user quickly closes several windows in a row)\n\nAeroSpace already checks for new appeared windows on every \"refresh session\" to fight unreliable `kAXWindowCreatedNotification` callback.\n\nThe only window state that AeroSpace doesn't actively check for is when the window is closed. Currently AeroSpace \"forgets\" about windows only if `kAXUIElementDestroyedNotification` is invoked for them.\n\nThe reason for it is because I didn't find yet a reliable way to detect that `AXUIElement` is no longer valid. One approach that I tried before is to check that `_AXUIElementGetWindow` returns `nil`. Unfortunately, `_AXUIElementGetWindow` returns `nil` for every `AXUIElement` when the screen is locked\n\nThe solution I tried and that doesn't work when the screen is locked\n\n```diff\ndiff --git a/Sources/AppBundle/layout/refresh.swift b/Sources/AppBundle/layout/refresh.swift\nindex 48f5787..8306d9f 100644\n--- a/Sources/AppBundle/layout/refresh.swift\n+++ b/Sources/AppBundle/layout/refresh.swift\n@@ -51,10 +51,19 @@ func refreshModel() {\n private func gc() {\n     // Garbage collect terminated apps and windows before working with all windows\n     MacApp.garbageCollectTerminatedApps()\n+    gcWindows()\n     // Garbage collect workspaces after apps, because workspaces contain apps.\n     Workspace.garbageCollectUnusedWorkspaces()\n }\n \n+func gcWindows() {\n+    for window in MacWindow.allWindows {\n+        if window.axWindow.containingWindowId() == nil {\n+            window.garbageCollect()\n+        }\n+    }\n+}\n+\n func refreshObs(_ obs: AXObserver, ax: AXUIElement, notif: CFString, data: UnsafeMutableRawPointer?) {\n     refreshAndLayout()\n }\n```\n\n---\n\nThis issue should fix the problem that sometimes windows are \"stuck\", and AeroSpace thinks that they still exist when they don't\n\n---\n\nUPD: In Sequoia, using some apps may cause macOS to (completely?) stop sending `kAXUIElementDestroyedNotification`. Known apps, that interfere with AeroSpace: contexts app, Amazon Q","files":null},{"type":6,"timestamp":1730497973,"nonce":"CyYTLfllX7VHY+CoHH/ASLUTUDU=","metadata":{"github-id":"UCE_lAHOJl1IZM6T2AJ7zmj8NTA"},"target":"6b8189dfdb2d793b230a96e42329dcec2478bc0ad39759d2ccd45decce957d9c","message":"macOS AX callbacks are unreliable. Sometimes windows can close but the `kAXUIElementDestroyedNotification` callback is not invoked (e.g. if user quickly closes several windows in a row)\n\nAeroSpace already checks for new appeared windows on every \"refresh session\" to fight unreliable `kAXWindowCreatedNotification` callback.\n\nThe only window state that AeroSpace doesn't actively check for is when the window is closed. Currently AeroSpace \"forgets\" about windows only if `kAXUIElementDestroyedNotification` is invoked for them.\n\nThe reason for it is because I didn't find yet a reliable way to detect that `AXUIElement` is no longer valid. One approach that I tried before is to check that `_AXUIElementGetWindow` returns `nil`. Unfortunately, `_AXUIElementGetWindow` returns `nil` for every `AXUIElement` when the screen is locked\n\n---\n\nThis issue should fix the problem that sometimes windows are \"stuck\", and AeroSpace thinks that they still exist when they don't\n\n---\n\nUPD: In Sequoia, using some apps may cause macOS to (completely?) stop sending `kAXUIElementDestroyedNotification`. Known apps, that interfere with AeroSpace: contexts app, Amazon Q","files":null},{"type":5,"timestamp":1724322009,"nonce":"egsEqtisggEIUOeSixBvlV/agkw=","metadata":{"github-id":"LE_lADOJl1IZM6T2AJ7zwAAAANA91Wy"},"added":["problem"],"removed":[]},{"type":2,"timestamp":1724322257,"nonce":"jvaq8a6A7hooId2DcweQ/ZCDipg=","metadata":{"github-id":"RTE_lADOJl1IZM6T2AJ7zwAAAANA-BvG"},"title":"Actively check for  closed windows on every \"refresh session\"","was":"Fight with  Ghost windows. Actively check for  closed windows on every \"refresh session\""}]}