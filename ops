{"author":{"id":"7511dc17b2c844aaca6a1ee4e95142d68d6a1b9a00f96d1a97109e3f924088b4"},"ops":[{"type":1,"timestamp":1728902744,"nonce":"HpAiu9ynkGBvt9SkdroChn3ZW8Q=","metadata":{"github-id":"I_kwDOJl1IZM6aHY4o","github-url":"https://github.com/nikitabobko/AeroSpace/issues/594","origin":"github"},"title":"Application menu is unusable when application is not on the monitor that contains menubar","message":"I have a multi monitor setup with center monitor being the main one with the MacOS menubar and the left and right ones being secondary ones. In the attached video you can see the menubar on the main monitor. The secondary monitor is not included because the default MacOS screen capture tool doesn't seem to support multi monitor setup. What you see on the video is the following:\n\n- I move the mouse left to the secondary monitor, where an Aerospace workspace with kitty terminal is located\n- I click kitty to gain focus (or switch to that workspace with a keyboard shortcut, does not matter)\n- I got back to the main monitor and try to use kitty's menu\n- kitty's menu is immediatelly closed and the menu from Chrome, which is on the workspace on the main monitor is shown\n\nWe should be able to use the menu for application on all monitors.\n\n\n```\n‚ùØ aerospace debug-windows\nnet.kovidgoyal.kitty.window.54 windowId: 54\nnet.kovidgoyal.kitty.window.54 workspace: T\nnet.kovidgoyal.kitty.window.54 treeNodeParent: AppBundle.TilingContainer\nnet.kovidgoyal.kitty.window.54 recognizedAsDialog: false\nnet.kovidgoyal.kitty.window.54 AXTitle: Optional(zsh)\nnet.kovidgoyal.kitty.window.54 AXRole: Optional(AXWindow)\nnet.kovidgoyal.kitty.window.54 AXSubrole: Optional(AXStandardWindow)\nnet.kovidgoyal.kitty.window.54 AXFocused: Optional(0)\nnet.kovidgoyal.kitty.window.54 AXFullScreen: Optional(0)\nnet.kovidgoyal.kitty.window.54 AXFrame: Optional(\u003cAXValue 0x600000865f40\u003e {value = x:-2560.000000 y:-197.000000 w:2560.000000 h:1439.000000 type = kAXValueCGRectType})\nnet.kovidgoyal.kitty.window.54 AXPosition: Optional(\u003cAXValue 0x600001cb9530\u003e {value = x:-2560.000000 y:-197.000000 type = kAXValueCGPointType})\nnet.kovidgoyal.kitty.window.54 AXGrowArea: nil\nnet.kovidgoyal.kitty.window.54 AXMinimizeButton: nil\nnet.kovidgoyal.kitty.window.54 AXDocument: nil\nnet.kovidgoyal.kitty.window.54 AXSections: [\nnet.kovidgoyal.kitty.window.54         Optional({\nnet.kovidgoyal.kitty.window.54             SectionDescription = Content;\nnet.kovidgoyal.kitty.window.54             SectionObject = \"\u003cAXUIElement 0x600001cba4c0\u003e {pid=1310}\";\nnet.kovidgoyal.kitty.window.54             SectionUniqueID = AXContent;\nnet.kovidgoyal.kitty.window.54         })\nnet.kovidgoyal.kitty.window.54 ]\nnet.kovidgoyal.kitty.window.54 AXCloseButton: nil\nnet.kovidgoyal.kitty.window.54 AXMain: Optional(1)\nnet.kovidgoyal.kitty.window.54 AXActivationPoint: Optional(\u003cAXValue 0x600001ddef70\u003e {value = x:-1.000000 y:1441.000000 type = kAXValueCGPointType})\nnet.kovidgoyal.kitty.window.54 AXFullScreenButton: nil\nnet.kovidgoyal.kitty.window.54 AXProxy: nil\nnet.kovidgoyal.kitty.window.54 AXDefaultButton: nil\nnet.kovidgoyal.kitty.window.54 AXMinimized: Optional(0)\nnet.kovidgoyal.kitty.window.54 AXParent: Optional(\u003cAXUIElement Application 0x600001cb9530\u003e {pid=1310})\nnet.kovidgoyal.kitty.window.54 AXTitleUIElement: nil\nnet.kovidgoyal.kitty.window.54 AXCancelButton: nil\nnet.kovidgoyal.kitty.window.54 AXModal: Optional(0)\nnet.kovidgoyal.kitty.window.54 AXZoomButton: nil\nnet.kovidgoyal.kitty.window.54 AXSize: Optional(\u003cAXValue 0x600001ddef70\u003e {value = w:2560.000000 h:1439.000000 type = kAXValueCGSizeType})\nnet.kovidgoyal.kitty.window.54 AXToolbarButton: nil\nnet.kovidgoyal.kitty.window.54 Ignored: AXChildrenInNavigationOrder, AXChildren, AXRoleDescription\nnet.kovidgoyal.kitty           AXRole: Optional(AXApplication)\nnet.kovidgoyal.kitty           AXTitle: Optional(kitty)\nnet.kovidgoyal.kitty           AXFunctionRowTopLevelElements: [\nnet.kovidgoyal.kitty           ]\nnet.kovidgoyal.kitty           AXFrame: nil\nnet.kovidgoyal.kitty           AXFocusedUIElement: AXUIElement(windowId=54, title=nil, role=\"AXTextArea\", subrole=nil)\nnet.kovidgoyal.kitty           AXFrontmost: Optional(1)\nnet.kovidgoyal.kitty           AXExtrasMenuBar: nil\nnet.kovidgoyal.kitty           AXMainWindow: AXUIElement(windowId=54, title=\"zsh\", role=\"AXWindow\", subrole=\"AXStandardWindow\")\nnet.kovidgoyal.kitty           AXFocusedWindow: AXUIElement(windowId=54, title=\"zsh\", role=\"AXWindow\", subrole=\"AXStandardWindow\")\nnet.kovidgoyal.kitty           AXMenuBar: Optional(\u003cAXUIElement 0x600001cb9e30\u003e {pid=1310})\nnet.kovidgoyal.kitty           AXWindows: [\nnet.kovidgoyal.kitty               AXUIElement(windowId=54, title=\"zsh\", role=\"AXWindow\", subrole=\"AXStandardWindow\")\nnet.kovidgoyal.kitty           ]\nnet.kovidgoyal.kitty           AXSize: nil\nnet.kovidgoyal.kitty           AXPosition: nil\nnet.kovidgoyal.kitty           Ignored: AXChildren, AXChildrenInNavigationOrder, AXEnhancedUserInterface, AXPreferredLanguage, AXRoleDescription, AXHidden\n\n!!! DISCLAIMER !!!\n!!! 'debug-windows' command is not stable API. Please don't rely on the command existence and output format !!!\n!!! The only intended use case is to report bugs about incorrect windows handling !!!\n\nDebug session finished\n```\n\nMy config\n```\n# Place a copy of this config to ~/.aerospace.toml\n# After that, you can edit ~/.aerospace.toml to your liking\n\n# You can use it to add commands that run after login to macOS user session.\n# 'start-at-login' needs to be 'true' for 'after-login-command' to work\n# Available commands: https://nikitabobko.github.io/AeroSpace/commands\nafter-login-command = []\n\n# You can use it to add commands that run after AeroSpace startup.\n# 'after-startup-command' is run after 'after-login-command'\n# Available commands : https://nikitabobko.github.io/AeroSpace/commands\nafter-startup-command = []\n\n# Start AeroSpace at login\nstart-at-login = false\n\n# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization\nenable-normalization-flatten-containers = true\nenable-normalization-opposite-orientation-for-nested-containers = true\n\n# See: https://nikitabobko.github.io/AeroSpace/guide#layouts\n# The 'accordion-padding' specifies the size of accordion padding\n# You can set 0 to disable the padding feature\naccordion-padding = 0\n\n# Possible values: tiles|accordion\ndefault-root-container-layout = 'tiles'\n\n# Possible values: horizontal|vertical|auto\n# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,\n#               tall monitor (anything higher than wide) gets vertical orientation\ndefault-root-container-orientation = 'auto'\n\n# Mouse follows focus when focused monitor changes\n# Drop it from your config, if you don't like this behavior\n# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks\n# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse\n# Fallback value (if you omit the key): on-focused-monitor-changed = []\non-focused-monitor-changed = ['move-mouse monitor-lazy-center']\n\n# You can effectively turn off macOS \"Hide application\" (cmd-h) feature by toggling this flag\n# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key\n# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app\nautomatically-unhide-macos-hidden-apps = false\n\n# Possible values: (qwerty|dvorak)\n# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping\n[key-mapping]\npreset = 'qwerty'\n\n# Gaps between windows (inner-*) and between monitor edges (outer-*).\n# Possible values:\n# - Constant:     gaps.outer.top = 8\n# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor.\"some-pattern\" = 32 }, 24]\n#                 In this example, 24 is a default value when there is no match.\n#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.\n#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors\n[gaps]\ninner.horizontal = 0\ninner.vertical =   0\nouter.left =       0\nouter.bottom =     0\nouter.top =        0\nouter.right =      0\n\n# 'main' binding mode declaration\n# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes\n# 'main' binding mode must be always presented\n# Fallback value (if you omit the key): mode.main.binding = {}\n[mode.main.binding]\n\n# All possible keys:\n# - Letters.        a, b, c, ..., z\n# - Numbers.        0, 1, 2, ..., 9\n# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9\n# - F-keys.         f1, f2, ..., f20\n# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,\n#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab\n# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,\n#                   keypadMinus, keypadMultiply, keypadPlus\n# - Arrows.         left, down, up, right\n\n# All possible modifiers: cmd, alt, ctrl, shift\n\n# All possible commands: https://nikitabobko.github.io/AeroSpace/commands\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget\n# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)\n# alt-enter = '''exec-and-forget osascript -e '\n# tell application \"Terminal\"\n#     do script\n#     activate\n# end tell'\n# '''\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#layout\nalt-period = 'layout tiles horizontal vertical'\nalt-comma = 'layout accordion horizontal vertical'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#focus\nalt-h = 'focus left'\nalt-j = 'focus down'\nalt-k = 'focus up'\nalt-l = 'focus right'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#move\nalt-shift-h = 'move left'\nalt-shift-j = 'move down'\nalt-shift-k = 'move up'\nalt-shift-l = 'move right'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#resize\nalt-shift-minus = 'resize smart -50'\nalt-shift-equal = 'resize smart +50'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#workspace\nalt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need\nalt-b = 'workspace B'\nalt-c = 'workspace C'\nalt-d = 'workspace D'\nalt-e = 'workspace E'\nalt-f = 'workspace F'\nalt-g = 'workspace G'\nalt-i = 'workspace I'\nalt-m = 'workspace M'\nalt-n = 'workspace N'\nalt-o = 'workspace O'\nalt-p = 'workspace P'\nalt-q = 'workspace Q'\nalt-r = 'workspace R'\nalt-s = 'workspace S'\nalt-t = 'workspace T'\nalt-u = 'workspace U'\nalt-v = 'workspace V'\nalt-w = 'workspace W'\nalt-x = 'workspace X'\nalt-y = 'workspace Y'\nalt-z = 'workspace Z'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace\nalt-shift-a = 'move-node-to-workspace A'\nalt-shift-b = 'move-node-to-workspace B'\nalt-shift-c = 'move-node-to-workspace C'\nalt-shift-d = 'move-node-to-workspace D'\nalt-shift-e = 'move-node-to-workspace E'\nalt-shift-f = 'move-node-to-workspace F'\nalt-shift-g = 'move-node-to-workspace G'\nalt-shift-i = 'move-node-to-workspace I'\nalt-shift-m = 'move-node-to-workspace M'\nalt-shift-n = 'move-node-to-workspace N'\nalt-shift-o = 'move-node-to-workspace O'\nalt-shift-p = 'move-node-to-workspace P'\nalt-shift-q = 'move-node-to-workspace Q'\nalt-shift-r = 'move-node-to-workspace R'\nalt-shift-s = 'move-node-to-workspace S'\nalt-shift-t = 'move-node-to-workspace T'\nalt-shift-u = 'move-node-to-workspace U'\nalt-shift-v = 'move-node-to-workspace V'\nalt-shift-w = 'move-node-to-workspace W'\nalt-shift-x = 'move-node-to-workspace X'\nalt-shift-y = 'move-node-to-workspace Y'\nalt-shift-z = 'move-node-to-workspace Z'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth\nalt-tab = 'workspace-back-and-forth'\n# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor\nalt-shift-tab = 'move-workspace-to-monitor --wrap-around next'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands#mode\nalt-shift-0 = 'mode service'\n\n# 'service' binding mode declaration.\n# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes\n[mode.service.binding]\nesc = ['reload-config', 'mode main']\nr = ['flatten-workspace-tree', 'mode main'] # reset layout\nf = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout\nbackspace = ['close-all-windows-but-current', 'mode main']\n\n# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2\n#s = ['layout sticky tiling', 'mode main']\n\nalt-shift-h = ['join-with left', 'mode main']\nalt-shift-j = ['join-with down', 'mode main']\nalt-shift-k = ['join-with up', 'mode main']\nalt-shift-l = ['join-with right', 'mode main']\n\n# Event listeners\n\n## Browsers\n[[on-window-detected]]\nif.window-title-regex-substring = 'Chrome Personal'\nrun = 'move-node-to-workspace P'\n\n[[on-window-detected]]\nif.window-title-regex-substring = 'Chrome Work'\nrun = 'move-node-to-workspace K'\n\n[[on-window-detected]]\nif.app-id = 'org.mozilla.firefox'\nrun = 'move-node-to-workspace A'\n\n## IDE\n[[on-window-detected]]\nif.app-id = 'com.jetbrains.intellij'\nrun = 'move-node-to-workspace I'\n\n## Terminal\n[[on-window-detected]]\nif.app-id = 'net.kovidgoyal.kitty'\nrun = 'move-node-to-workspace T'\n\n## AI\n[[on-window-detected]]\nif.app-id = 'com.openai.chat'\nrun = ['layout floating', 'move-node-to-workspace G']\n\n## Notes\n[[on-window-detected]]\nif.app-id = 'md.obsidian'\nrun = 'move-node-to-workspace N'\n\n## Music\n[[on-window-detected]]\nif.app-id = 'com.spotify.client'\nrun = 'move-node-to-workspace S'\n\n## Finder\n[[on-window-detected]]\nif.app-id = 'com.apple.finder'\nrun = 'move-node-to-workspace E'\n\n## Postman\n[[on-window-detected]]\nif.app-id = 'com.postmanlabs.mac'\nrun = 'move-node-to-workspace R'\n\n## Signal\n[[on-window-detected]]\nif.app-id = 'com.tinyspeck.slackmacgap'\nrun = ['layout floating', 'move-node-to-workspace W']\n\n## Zoom\n[[on-window-detected]]\nif.app-id = 'us.zoom.xos'\nrun = 'move-node-to-workspace Z'\n\n## Miro\n[[on-window-detected]]\nif.app-id = 'com.electron.realtimeboard'\nrun = 'move-node-to-workspace O'\n\n## Chat\n[[on-window-detected]]\nif.app-id = 'org.whispersystems.signal-desktop'\nrun = 'move-node-to-workspace C'\n\n[[on-window-detected]]\nif.app-id = 'net.whatsapp.WhatsApp'\nrun = 'move-node-to-workspace C'\n\n# Home Monitor Layout\n# left 'DELL P2720DC (1)'\n# center 'DELL P2720DC (2)'\n# right 'built-in'\n\n# Office Monitor Layour\n# right DELL 4K-TBD\n# left 'built-in'\n\n[workspace-to-monitor-force-assignment]\nC = 'built-in'\nT = ['DELL P2720DC \\(1\\)', 'built-in']\nI = 'DELL P2720DC \\(2\\)'\nK = 'DELL P2720DC \\(2\\)'\nP = 'DELL P2720DC \\(2\\)'\nA = 'DELL P2720DC \\(1\\)'\nG = 'DELL P2720DC \\(1\\)'\nN = 'DELL P2720DC \\(1\\)'\nS = 'built-in'\nZ = 'built-in'\n\n```\n\n## Checklist\n\n- [x] I've searched for duplicates. My search queries were (please don't forget to search in closed issues too):\n  - menubar\n- [x] I've read the guide https://nikitabobko.github.io/AeroSpace/guide\n- [x] I've searched in the documentation (https://nikitabobko.github.io/AeroSpace/guide \u0026 https://nikitabobko.github.io/AeroSpace/commands). My search queries were:\n  - menubar\n\n```\n‚ùØ aerospace --version\naerospace CLI client version: 0.15.2-Beta b6cf82771f245ab7349a93baf8709e171537ff58\nAeroSpace.app server version: 0.15.2-Beta b6cf82771f245ab7349a93baf8709e171537ff58\n```\n\nhttps://github.com/user-attachments/assets/f3143a1c-2e95-4563-9df5-3c04acb15cee","files":null}]}