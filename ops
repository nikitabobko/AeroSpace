{"author":{"id":"0139b62b3cbbb88f0768ee1cbb7dbee07721aae534870820177f5ebd2dfed987"},"ops":[{"type":3,"timestamp":1730686916,"nonce":"e1WGZxZ6+WBi59ANHbFC3N+OV9g=","metadata":{"github-id":"IC_kwDOJl1IZM6SQMIq","github-url":"https://github.com/nikitabobko/AeroSpace/issues/412#issuecomment-2453717546"},"message":"If anyone needs something now, my workaround which is a bit based on @\\eljobe, is to utilize skhd's `skhd -k \"\u003ckey-combination\u003e\"` to do a bunch of key combination.\n\nI added this to my aerospace.toml:\n\n```toml\n[mode.passthrough.binding]\n\n# this one does nothing, here just so that we have passthrough\nctrl-cmd-alt-shift-9 = 'close'\n```\n\nI then have a script to do the passthrough magic:\n\n```bash\n#!/usr/bin/env bash\n\n# ~/aerospace/remap-passthrough.sh\n\n# adds flags --key, --only, --except\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        --key) key=\"$2\"; shift ;;\n        --only) only=\"$2\"; shift ;;\n        --except) except=\"$2\"; shift ;;\n        *) echo \"Unknown parameter passed: $1\"; exit 1 ;;\n    esac\n    shift\ndone\n\nif [ -z \"$key\" ]; then\n    echo \"Key not provided\"\n    exit 1\nfi\n\n# --only handling: comma separated keys of apps for this keybind to act on\nif [ -n \"$only\" ]; then\n    IFS=',' read -r -a only_array \u003c\u003c\u003c \"$only\"\n    for item in \"${only_array[@]}\"; do\n        if aerospace list-windows --focused | grep -q \"$item\"; then\n            break\n        fi\n        exit 0\n    done\nfi\n\n# --except handling: comma separated keys of apps for this keybind to NOT act on.\nif [ -n \"$except\" ]; then\n    IFS=',' read -r -a except_array \u003c\u003c\u003c \"$except\"\n    for item in \"${except_array[@]}\"; do\n        if aerospace list-windows --focused | grep -q \"$item\"; then\n            exit 0\n        fi\n    done\nfi\n\naerospace mode passthrough\nskhd -k \"$key\"\naerospace mode main\n```\n\nSo at the end, we can then bind something like this:\n\n```toml\n# linux muscle memory\nctrl-a = 'exec-and-forget ~/aerospace/remap-passthrough.sh --key cmd-a --except \"Edge,Firefox\"'\n```\n\nThere's a slight delay as we're basically executing a bash script in the background each time, but it's good enough for me.","files":null},{"type":6,"timestamp":1730687179,"nonce":"LUw7/dw487lzAKAtoF6kfaYuARE=","metadata":{"github-id":"UCE_lALOJl1IZM6SQMIqzlQMxnk"},"target":"8f69649643d5a4803000c38d2099903eda3b86fcf8770060a37f010746c91345","message":"If anyone needs something now, my workaround which is a bit based on @\\eljobe, is to utilize skhd's `skhd -k \"\u003ckey-combination\u003e\"` to do a bunch of key combination.\n\nI added this to my aerospace.toml:\n\n```toml\n[mode.passthrough.binding]\n\n# this one does nothing, here just so that we have passthrough\nctrl-cmd-alt-shift-9 = 'close'\n```\n\nI then have a script to do the passthrough magic:\n\n```bash\n#!/usr/bin/env bash\n\n# ~/aerospace/remap-passthrough.sh\n\n# adds flags --key, --only, --except\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        --key) key=\"$2\"; shift ;;\n        --only) only=\"$2\"; shift ;;\n        --except) except=\"$2\"; shift ;;\n        *) echo \"Unknown parameter passed: $1\"; exit 1 ;;\n    esac\n    shift\ndone\n\nif [ -z \"$key\" ]; then\n    echo \"Key not provided\"\n    exit 1\nfi\n\n# --only handling: comma separated keys of apps for this keybind to act on\nif [ -n \"$only\" ]; then\n    IFS=',' read -r -a only_array \u003c\u003c\u003c \"$only\"\n    found=false\n    for item in \"${only_array[@]}\"; do\n        if aerospace list-windows --focused | grep -q \"$item\"; then\n            found=true\n            break\n        fi\n    done\n    if [ \"$found\" = false ]; then\n        exit 0\n    fi\nfi\n\n# --except handling: comma separated keys of apps for this keybind to NOT act on.\nif [ -n \"$except\" ]; then\n    IFS=',' read -r -a except_array \u003c\u003c\u003c \"$except\"\n    for item in \"${except_array[@]}\"; do\n        if aerospace list-windows --focused | grep -q \"$item\"; then\n            exit 0\n        fi\n    done\nfi\n\naerospace mode passthrough\nskhd -k \"$key\"\naerospace mode main\n```\n\nSo at the end, we can then bind something like this:\n\n```toml\n# linux muscle memory\nctrl-a = 'exec-and-forget ~/aerospace/remap-passthrough.sh --key cmd-a --except \"Edge,Firefox\"'\n```\n\nThere's a slight delay as we're basically executing a bash script in the background each time, but it's good enough for me.","files":null},{"type":6,"timestamp":1730687970,"nonce":"Wf+X7EcHBdF0TXoe6/W6YHJrXIo=","metadata":{"github-id":"UCE_lALOJl1IZM6SQMIqzlQM4JE"},"target":"8f69649643d5a4803000c38d2099903eda3b86fcf8770060a37f010746c91345","message":"If anyone needs something now, my workaround which is a bit based on @\\eljobe, is to utilize skhd's `skhd -k \"\u003ckey-combination\u003e\"` to do a bunch of key combination.\n\nI added this to my aerospace.toml:\n\n```toml\n[mode.passthrough.binding]\n\n# this one does nothing, here just so that we have passthrough\nctrl-cmd-alt-shift-9 = 'close'\n```\n\nI then have a script to do the passthrough magic:\n\n```bash\n#!/usr/bin/env bash\n\n# ~/aerospace/remap-passthrough.sh\n\n# adds flags --key, --only, --except\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        --key) key=\"$2\"; shift ;;\n        --only) only=\"$2\"; shift ;;\n        --except) except=\"$2\"; shift ;;\n        *) echo \"Unknown parameter passed: $1\"; exit 1 ;;\n    esac\n    shift\ndone\n\nif [ -z \"$key\" ]; then\n    echo \"Key not provided\"\n    exit 1\nfi\n\n# --only handling: comma separated keys of apps for this keybind to act on\nif [ -n \"$only\" ]; then\n    IFS=',' read -r -a only_array \u003c\u003c\u003c \"$only\"\n    found=false\n    for item in \"${only_array[@]}\"; do\n        if aerospace list-windows --focused --format \"%{app-name} | %{app-bundle-id}\" | grep -q \"$item\"; then\n            found=true\n            break\n        fi\n    done\n    if [ \"$found\" = false ]; then\n        exit 0\n    fi\nfi\n\n# --except handling: comma separated keys of apps for this keybind to NOT act on.\nif [ -n \"$except\" ]; then\n    IFS=',' read -r -a except_array \u003c\u003c\u003c \"$except\"\n    for item in \"${except_array[@]}\"; do\n        if aerospace list-windows --focused --format \"%{app-name} | %{app-bundle-id}\" | grep -q \"$item\"; then\n            exit 0\n        fi\n    done\nfi\n\naerospace mode passthrough\nskhd -k \"$key\"\naerospace mode main\n```\n\nSo at the end, we can then bind something like this:\n\n```toml\n# linux muscle memory\nctrl-a = 'exec-and-forget ~/aerospace/remap-passthrough.sh --key cmd-a --except \"Edge,Firefox\"'\n```\n\nThere's a slight delay as we're basically executing a bash script in the background each time, but it's good enough for me.","files":null}]}