{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":3,"timestamp":1717849652,"nonce":"P7lIi8huP1ZsmNMihsCrJVj32s8=","metadata":{"github-id":"IC_kwDOJl1IZM6Agjw4","github-url":"https://github.com/nikitabobko/AeroSpace/issues/256#issuecomment-2156018744"},"message":"\u003e Could it be possible to disable AeroSpace (e.g. âŒ˜E) for a specific native Space\n\nIt's not possible to know what specific Space is currently active without using private APIs (which goes against values of the project)\n\n\u003e and I can stick apps that are less flexible about window sizing in their own floating space.\n\nInstead of dedicated Space for floating windows you can create yourself a dedicated workspace for floating windows.\n\n```toml\nalt-shift-2 = ['layout floating', 'move-node-to-workspace 2']\n\n# Tile windows back\nalt-shift-1 = ['layout tiling', 'mode-node-to-workspace 1']\nalt-shift-3 = ['layout tiling', 'mode-node-to-workspace 3']\nalt-shift-4 = ['layout tiling', 'mode-node-to-workspace 4']\n# etc\n```\n\nNow you can use `alt-shift-2` shortcut to float the window and send it to workspace 2, which effectively makes your second workspace a workspace for floating windows\n\n---\n\nThis won't work as expected when you open new windows while workspace 2 is already active (you'd need to manually press `alt-shift-2` every time you open a new window), I think it could be fixed by introducing one more condition in `on-window-detected` callback:\n\n```toml\n[[on-window-detected]]\nif.workspace = '2'\nrun = 'layout floating'\n```\n\nSince I think it's a good idea, which is easy to implement, I introduced `if.workpsace` in `main` branch https://github.com/nikitabobko/AeroSpace/commit/d68f1deae34e19e36cc9956730a2e54a47b3bc9f\n\nIt will become available in the next update, though you can build from sources, if you eager to try it","files":null},{"type":3,"timestamp":1717858976,"nonce":"1N+nrUhZDUtqaoM50t/0/KJux6g=","metadata":{"github-id":"IC_kwDOJl1IZM6Agv0Y","github-url":"https://github.com/nikitabobko/AeroSpace/issues/256#issuecomment-2156068120"},"message":"If AeroSpace will ever introduce dynamic twm capabilities #260, the desired workflow will be even easier to support by using `floating` normalization","files":null},{"type":6,"timestamp":1717859006,"nonce":"86T+K+jfh24cHGcWBa5FmKioEAg=","metadata":{"github-id":"UCE_lALOJl1IZM6Agv0YzkgYx2k"},"target":"0d0bc939728a0c2ac744e1a5ecf326ea6b0a212107de7451371c732298d23680","message":"If AeroSpace introduces dynamic twm capabilities #260, the desired workflow will be even easier to support by using `floating` normalization","files":null},{"type":6,"timestamp":1717859024,"nonce":"RS+xaCVYQkVLS0VLWRSavOGF9Hs=","metadata":{"github-id":"UCE_lALOJl1IZM6Agv0YzkgYx5w"},"target":"0d0bc939728a0c2ac744e1a5ecf326ea6b0a212107de7451371c732298d23680","message":"If AeroSpace ever introduces dynamic twm capabilities #260, the desired workflow will be even easier to support by using `floating` normalization","files":null},{"type":4,"timestamp":1717938227,"nonce":"Curu2/g5kOn/mRimLjspu7ff8N8=","metadata":{"github-id":"CE_lADOJl1IZM6Lhy8CzwAAAAMMTqAI"},"status":2},{"type":3,"timestamp":1718556619,"nonce":"Nnw8ilSsximzrv6E9mnJ2TFT8kM=","metadata":{"github-id":"IC_kwDOJl1IZM6Bco87","github-url":"https://github.com/nikitabobko/AeroSpace/issues/256#issuecomment-2171768635"},"message":"\u003e Since I think it's a good idea, which is easy to implement, I introduced if.workpsace in main branch https://github.com/nikitabobko/AeroSpace/commit/d68f1deae34e19e36cc9956730a2e54a47b3bc9f\n\u003e \n\u003e It will become available in the next update, though you can build from sources, if you eager to try it\n\nReleased in 0.12.0-Beta","files":null}]}