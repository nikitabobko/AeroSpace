{"author":{"id":"dd4e7f4dcbd67a1d1e444d4e4389b6ba55d4aec2fffc146ad9b04aade5354482"},"ops":[{"type":3,"timestamp":1736729624,"nonce":"TweoO3hHBvfLGK3689n09owMvlA=","metadata":{"github-id":"IC_kwDOJl1IZM6aI04m","github-url":"https://github.com/nikitabobko/AeroSpace/issues/101#issuecomment-2586005030"},"message":"Hm, I like the idea of adding fallbacks, but there's also other factors to consider. What if the computer crashes, but not due to the private API? The flag would be set and Aerospace would default to the old behavior, which can be confusing. Another potential case is if this API were to change, would it actually crash the program? Report an error? Cause different behavior? Or just silently fail?\n\nFor those reasons, I think Aerospace should just supply a (heavily disclaimed) config option to toggle this behavior. At least if you are opt-in, you know the first place to check when there's a problem. Perhaps there can be a \"safe mode\" option in the menu bar to disable \"unstable\" features like this.\n\nIt's unfortunate because you want to provide a robust and stable experience by default, but then there's things like this. Ideally this feature would be enabled by default, but that's the tradeoff.","files":null},{"type":6,"timestamp":1736730479,"nonce":"SyYo8ucIKd7qxwYLTxSQe7ijGPM=","metadata":{"github-id":"UCE_lALOJl1IZM6aI04mzlmHtMI"},"target":"2b7fe07d773fed35f8ccaa2db5c553240e51ab1d377628f0f504782cebe15b50","message":"Hm, I like the idea of adding fallbacks, but there's also other factors to consider. What if the program or computer crashes, but not due to the private API? The flag would be set and Aerospace would default to the old behavior, which can be confusing. Another potential case is if this API were to change, would it actually crash the program? Report an error? Cause different behavior? Or just silently fail?\n\nFor those reasons, I think Aerospace should just supply a (heavily disclaimed) config option to toggle this behavior. At least if you are opt-in, you know the first place to check when there's a problem. Perhaps there can be a \"safe mode\" option in the menu bar to disable \"unstable\" features like this. I think the crash-detection feature is still useful, if there's a config that calls the focus command on startup and immediately crashes everything, a prompt that asks to switch to safe mode is a good idea.\n\nIt's unfortunate because you want to provide a robust and stable experience by default, but then there's things like this. Ideally this feature would be enabled by default, but that's the tradeoff.","files":null},{"type":6,"timestamp":1736730502,"nonce":"9dI5k1iaY8P8T13Le77oVFbwK3c=","metadata":{"github-id":"UCE_lALOJl1IZM6aI04mzlmHtbQ"},"target":"2b7fe07d773fed35f8ccaa2db5c553240e51ab1d377628f0f504782cebe15b50","message":"Hm, I like the idea of adding fallbacks, but there's also other factors to consider. What if the program or computer crashes, but not due to the private API? The flag would be set and Aerospace would default to the old behavior, which can be confusing. Another potential case is if this API were to change, would it actually crash the program? Report an error? Cause different behavior? Or just silently fail?\n\nFor those reasons, I think Aerospace should also supply a (heavily disclaimed) config option to toggle this behavior. At least if you are opt-in, you know the first place to check when there's a problem. Perhaps there can be a \"safe mode\" option in the menu bar to disable \"unstable\" features like this. I think the crash-detection feature is still useful, if there's a config that calls the focus command on startup and immediately crashes everything, a prompt that asks to switch to safe mode is a good idea.\n\nIt's unfortunate because you want to provide a robust and stable experience by default, but then there's things like this. Ideally this feature would be enabled by default, but that's the tradeoff.","files":null}]}