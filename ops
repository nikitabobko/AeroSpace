{"author":{"id":"9006205d7e210990dd597a6791ceb19005a9c2879cb6e514c850aedc184b31c2"},"ops":[{"type":3,"timestamp":1726594834,"nonce":"nqwmfSvSJT9ZcIXlw1Lw/T/mKOk=","metadata":{"github-id":"IC_kwDOJl1IZM6MdepV","github-url":"https://github.com/nikitabobko/AeroSpace/issues/497#issuecomment-2356537941"},"message":"Also getting this when Godot (another game engine) is open. I'll try to investigate this later on today. Think this is also a duplicate of #483","files":null},{"type":3,"timestamp":1726595233,"nonce":"UiEdNxb3QplR6b9+OQmA2n1KD6A=","metadata":{"github-id":"IC_kwDOJl1IZM6MdheE","github-url":"https://github.com/nikitabobko/AeroSpace/issues/497#issuecomment-2356549508"},"message":"Using the accessibility inspector on the Godot window also lags a lot. I'm guessing the hang up in Aerospace is the accessibility API on certain apps. Possibly something to do with OpenGL, but that's just a guess at this point.","files":null},{"type":3,"timestamp":1726596036,"nonce":"K2k50Q33PqYWDLe6StHkPKEi2SM=","metadata":{"github-id":"IC_kwDOJl1IZM6MdnC8","github-url":"https://github.com/nikitabobko/AeroSpace/issues/497#issuecomment-2356572348"},"message":"I can confirm this also happens with Love2D. Although seems significantly more severe with Godot.","files":null},{"type":6,"timestamp":1726601397,"nonce":"amlcmz7YrrGj/ijb0h78p69u8KQ=","metadata":{"github-id":"UCE_lALOJl1IZM6MdnC8zk_4Xr8"},"target":"722f86b6b0f64b65118140add1600eaa093d6ebd465033c0960b4f455d835feb","message":"I can confirm this also happens with Love2D. Although seems significantly more severe with Godot.\n\nEdit: Updating here instead of spamming with more comments.\n\nI ran a hyperfine benchmark of `aerospace list-apps` with and without godot running. No other changes:\n\nGodot running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):     988.1 ms ±  34.3 ms    [User: 6.0 ms, System: 6.1 ms]\n  Range (min … max):   892.2 ms … 1008.2 ms    10 runs\n```\n\nGodot not running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):      32.4 ms ±   3.9 ms    [User: 3.7 ms, System: 3.0 ms]\n  Range (min … max):    24.9 ms …  42.4 ms    73 runs\n```\n\nWhen navigating between windows, the delay with godot seems to 'stack'. The more I navigate into and out of the godot window, the worse the lag gets until all my window management freezes for a while and then all the buffered inputs execute at the same time.","files":null},{"type":6,"timestamp":1726601605,"nonce":"WVbU3PdYQ6Vq9/RLBenVB7TgIlw=","metadata":{"github-id":"UCE_lALOJl1IZM6MdnC8zk_4dbw"},"target":"722f86b6b0f64b65118140add1600eaa093d6ebd465033c0960b4f455d835feb","message":"I can confirm this also happens with Love2D. Although seems significantly more severe with Godot.\n\nEdit: Updating here instead of spamming with more comments.\n\nI ran a hyperfine benchmark of `aerospace list-apps` with and without godot running. No other changes:\n\nGodot running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):     988.1 ms ±  34.3 ms    [User: 6.0 ms, System: 6.1 ms]\n  Range (min … max):   892.2 ms … 1008.2 ms    10 runs\n```\n\nGodot not running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):      32.4 ms ±   3.9 ms    [User: 3.7 ms, System: 3.0 ms]\n  Range (min … max):    24.9 ms …  42.4 ms    73 runs\n```\n\nWhen navigating between windows, the delay with godot seems to 'stack'. The more I navigate into and out of the godot window, the worse the lag gets until all my window management freezes for a while and then all the buffered inputs execute at the same time.\n\nHopefully I'll get some time to do some actual profiling on AeroSpace tonight.","files":null},{"type":6,"timestamp":1726660189,"nonce":"CQFDeleL6OgR98N/BL8BAdut2AQ=","metadata":{"github-id":"UCE_lALOJl1IZM6MdnC8zlAKDcY"},"target":"722f86b6b0f64b65118140add1600eaa093d6ebd465033c0960b4f455d835feb","message":"I can confirm this also happens with Love2D. Although seems significantly more severe with Godot.\n\nEdit: Updating here instead of spamming with more comments.\n\nI ran a hyperfine benchmark of `aerospace list-apps` with and without godot running. No other changes:\n\nGodot running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):     988.1 ms ±  34.3 ms    [User: 6.0 ms, System: 6.1 ms]\n  Range (min … max):   892.2 ms … 1008.2 ms    10 runs\n```\n\nGodot not running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):      32.4 ms ±   3.9 ms    [User: 3.7 ms, System: 3.0 ms]\n  Range (min … max):    24.9 ms …  42.4 ms    73 runs\n```\n\nWhen navigating between windows, the delay with godot seems to 'stack'. The more I navigate into and out of the godot window, the worse the lag gets until all my window management freezes for a while and then all the buffered inputs execute at the same time.\n\nHopefully I'll get some time to do some actual profiling on AeroSpace tonight.\n\n-- Update: 2024-09-18\n\nI've done some profiling, but I can't seem to pinpoint the cause of the slowdowns. It does indeed seem to happen when interacting with the  accessibility APIs, and this aligns with my experience using the accessibility inspector.\n\nUsing Xcode instruments, I've found that the hangs occur during calls to the apis, but the apis themselves don't seem to take more than a few ms to complete, so I'm still not sure what's happening. My experience with instruments is limited so I might be missing something obvious.\n\nOne thing that has become apparent though is that, if possible, some of the accessibility logic could be taken off the main thread - Any slowdown in AeroSpace can completely halt further usage and even lock up the system because it's trying to catch up with switching windows, listen to inputs etc.","files":null},{"type":6,"timestamp":1726663115,"nonce":"h85La2/ZBw4DBPny82KMgVe0/LU=","metadata":{"github-id":"UCE_lALOJl1IZM6MdnC8zlALMGw"},"target":"722f86b6b0f64b65118140add1600eaa093d6ebd465033c0960b4f455d835feb","message":"I can confirm this also happens with Love2D. Although seems significantly more severe with Godot.\n\nEdit: Updating here instead of spamming with more comments.\n\nI ran a hyperfine benchmark of `aerospace list-apps` with and without godot running. No other changes:\n\nGodot running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):     988.1 ms ±  34.3 ms    [User: 6.0 ms, System: 6.1 ms]\n  Range (min … max):   892.2 ms … 1008.2 ms    10 runs\n```\n\nGodot not running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):      32.4 ms ±   3.9 ms    [User: 3.7 ms, System: 3.0 ms]\n  Range (min … max):    24.9 ms …  42.4 ms    73 runs\n```\n\nWhen navigating between windows, the delay with godot seems to 'stack'. The more I navigate into and out of the godot window, the worse the lag gets until all my window management freezes for a while and then all the buffered inputs execute at the same time.\n\nHopefully I'll get some time to do some actual profiling on AeroSpace tonight.\n\n-- Update: 2024-09-18\n\nI've done some profiling, but I can't seem to pinpoint the cause of the slowdowns. It does indeed seem to happen when interacting with the  accessibility APIs, and this aligns with my experience using the accessibility inspector.\n\nUsing Xcode instruments, I've found that the hangs occur during calls to the apis, but the apis themselves don't seem to take more than a few ms to complete, so I'm still not sure what's happening. My experience with instruments is limited so I might be missing something obvious.\n\nOne thing that has become apparent though is that, if possible, some of the accessibility logic could be taken off the main thread - Any slowdown in AeroSpace can completely halt further usage and even lock up the system because it's trying to catch up with switching windows, listen to inputs etc.\n\n-- \n\nOkay so I've found at least one of the problematic accessibility calls. While inspecting a 4 second hang, I can see a call to `AXUIElementCopyAttributeValue` that takes 1.87s to complete. That's half of the hang accounted for at least. \n\n![Screenshot 2024-09-18 at 13 32 28](https://github.com/user-attachments/assets/f21e7d8f-7241-406d-82b9-179139963ade)\n\nI *think* that another problematic call is `NSWorkspace.shared.runningAppications` combined with the filter that checks the computed property `activationPolicy`. This is used when iterating over all of the manageable apps. It's not as impactful, but as activationPolicy is 'called' in a closure during an iteration, it adds up.","files":null},{"type":6,"timestamp":1726669990,"nonce":"qyddzEgP7BDq+JaciKS7JvE168s=","metadata":{"github-id":"UCE_lALOJl1IZM6MdnC8zlAOcw8"},"target":"722f86b6b0f64b65118140add1600eaa093d6ebd465033c0960b4f455d835feb","message":"I can confirm this also happens with Love2D. Although seems significantly more severe with Godot.\n\nEdit: Updating here instead of spamming with more comments.\n\nI ran a hyperfine benchmark of `aerospace list-apps` with and without godot running. No other changes:\n\nGodot running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):     988.1 ms ±  34.3 ms    [User: 6.0 ms, System: 6.1 ms]\n  Range (min … max):   892.2 ms … 1008.2 ms    10 runs\n```\n\nGodot not running:\n```\nhyperfine \"aerospace list-apps\"\nBenchmark 1: aerospace list-apps\n  Time (mean ± σ):      32.4 ms ±   3.9 ms    [User: 3.7 ms, System: 3.0 ms]\n  Range (min … max):    24.9 ms …  42.4 ms    73 runs\n```\n\nWhen navigating between windows, the delay with godot seems to 'stack'. The more I navigate into and out of the godot window, the worse the lag gets until all my window management freezes for a while and then all the buffered inputs execute at the same time.\n\nHopefully I'll get some time to do some actual profiling on AeroSpace tonight.\n\n-- Update: 2024-09-18\n\nI've done some profiling, but I can't seem to pinpoint the cause of the slowdowns. It does indeed seem to happen when interacting with the  accessibility APIs, and this aligns with my experience using the accessibility inspector.\n\nUsing Xcode instruments, I've found that the hangs occur during calls to the apis, but the apis themselves don't seem to take more than a few ms to complete, so I'm still not sure what's happening. My experience with instruments is limited so I might be missing something obvious.\n\nOne thing that has become apparent though is that, if possible, some of the accessibility logic could be taken off the main thread - Any slowdown in AeroSpace can completely halt further usage and even lock up the system because it's trying to catch up with switching windows, listen to inputs etc.\n\n-- \n\nOkay so I've found at least one of the problematic accessibility calls. While inspecting a 4 second hang, I can see a call to `AXUIElementCopyAttributeValue` that takes 1.87s to complete. That's half of the hang accounted for at least. \n\n![Screenshot 2024-09-18 at 13 32 28](https://github.com/user-attachments/assets/f21e7d8f-7241-406d-82b9-179139963ade)\n\nI *think* that another problematic call is `NSWorkspace.shared.runningAppications` combined with the filter that checks the computed property `activationPolicy`. This is used when iterating over all of the manageable apps. It's not as impactful, but as activationPolicy is 'called' in a closure during an iteration, it adds up.\n\n-- \n\nNot really discovered anything more, other than running godot in headless mode also causes the lag (maybe worse?), despite not having a window.","files":null},{"type":3,"timestamp":1726677349,"nonce":"ZOncl034tsfvQ3lCRgIsHtKb4Nk=","metadata":{"github-id":"IC_kwDOJl1IZM6MmnnM","github-url":"https://github.com/nikitabobko/AeroSpace/issues/497#issuecomment-2358933964"},"message":"I've found a workaround for Godot, maybe there's something similar for Unity. In the godot editor settings, under Interface -\u003e Editor, right at the bottom there is a `Update Continuously` checkbox. Enabling this seems to solve the issue.\n\nNo idea why.","files":null},{"type":6,"timestamp":1726678951,"nonce":"NDfF/T2+iig5265hFn3ETRSsrUo=","metadata":{"github-id":"UCE_lALOJl1IZM6MmnnMzlAS0dE"},"target":"d3234d1288b21911f8778e45c146bb151a5f0bde69ec61affe72692a03a8caf8","message":"I've found a workaround for Godot, maybe there's something similar for Unity. In the godot editor settings, under Interface -\u003e Editor, right at the bottom there is a `Update Continuously` checkbox. Enabling this seems to solve the issue.\n\nNo idea why.\n\nAlso seeing this slowdown with the Bevy game engine, too - I've spent an entire day researching this and the most I've come up with is that these game engines are running the game loops on the main thread, which is also where a traditional window loop (that answers to the AX api requests) runs, so it ends up competing and the AX api's have to wait until the app has time to respond. But I've not been able to confirm any of this.","files":null}]}