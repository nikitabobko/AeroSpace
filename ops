{"author":{"id":"da53c103b51221c90c9b4a4278bed7c17749dae6a6f6d1f9d4a13d2b8de31146"},"ops":[{"type":1,"timestamp":1709458732,"nonce":"B5INyFLUGs0tXCQOPik83JHZHuM=","metadata":{"github-id":"I_kwDOJl1IZM6BD3Qy","github-url":"https://github.com/nikitabobko/AeroSpace/issues/175","origin":"github"},"title":"Question: better integration with sketchybar","message":"Hey there. I've been trying to build a proper dock-like menu bar for aerospace using sketchybar, and have run into some issues. I'm posting this in the hopes that someone else has tried this with more success, or has some suggestions.  This is where I got:\n\n\u003cimg width=\"464\" alt=\"Screenshot 2024-03-03 at 1 26 56 AM\" src=\"https://github.com/nikitabobko/AeroSpace/assets/8430991/6661567b-c812-49e2-8067-5838bee3f60e\"\u003e\n\nIt should support the following:\n- highlight active app.\n- highlight active workspace.\n- order apps in a somewhat sensible way (l-r, top-bottom)\n- update when creating/closing a window\n- update when moving windows left/right within a workspace.\n- update when moving windows between workspaces.\n\nMy impression is that there should be a better integration between aerospace and sketchybar, or else aerospace should just implement it's own menu bar. The communication between aerospace and sketchybar here is really messy (although I think this is mostly on sketchybar's side... it's very hard to manage state in sketchybar)\n\nI think this would be a really useful tool to have, especially for users with many workspaces who want a quick way to keep track of what is where.\n\nHere are my config files I hacked together. This is as far as I got before giving up.\n\n\n\n\n-------------------\n\naerospace.toml:\n```# You can use it to add commands that run after login to macOS user session.\n# 'start-at-login' needs to be 'true' for 'after-login-command' to work\n# Available commands: https://nikitabobko.github.io/AeroSpace/commands.html\nafter-login-command = []\n\n# You can use it to add commands that run after AeroSpace startup.\n# 'after-startup-command' is run after 'after-login-command'\n# Available commands : https://nikitabobko.github.io/AeroSpace/commands.html\nafter-startup-command = [\n    # JankyBorders has a built-in detection of already running process,\n    # so it won't be run twice on AeroSpace restart\n    'exec-and-forget borders',\n    # 'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar'\n]\n\n\n[[on-window-detected]]\nrun = ['/bin/bash -c /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger new-window']\n\n# Notify Sketchybar about workspace change\n# exec-on-workspace-change = [\n#     '/bin/bash',\n#     '-c',\n#     '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger change-focused-workspace FOCUSED=$AEROSPACE_FOCUSED_WORKSPACE PREV_FOCUSED=$AEROSPACE_PREV_WORKSPACE',\n# ]\n\n\n# Start AeroSpace at login\nstart-at-login = false\n\n# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide.html#normalization\nenable-normalization-flatten-containers = true\nenable-normalization-opposite-orientation-for-nested-containers = true\n\n# See: https://nikitabobko.github.io/AeroSpace/guide.html#layouts\n# The 'accordion-padding' specifies the size of accordion padding\n# You can set 0 to disable the padding feature\naccordion-padding = 30\n\n# Possible values: tiles|accordion\ndefault-root-container-layout = 'tiles'\n\n# Possible values: horizontal|vertical|auto\n# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,\n#               tall monitor (anything higher than wide) gets vertical orientation\ndefault-root-container-orientation = 'auto'\n\n# Gaps between windows (inner-*) and between monitor edges (outer-*).\n# Possible values:\n# - Constant:     gaps.outer.top = 8\n# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor.\"some-pattern\" = 32 }, 24]\n#                 In this example, 24 is a default value when there is no match.\n#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.\n#                 See: https://nikitabobko.github.io/AeroSpace/guide.html#assign-workspaces-to-monitors\n\n\ngaps.inner.horizontal = [\n    { monitor.\"built-in\" = 10 },\n    { monitor.\"LG Ultra HD\" = 12 },\n    10,\n]\ngaps.inner.vertical = [\n    { monitor.\"built-in\" = 10 },\n    { monitor.\"LG Ultra HD\" = 12 },\n    10,\n]\ngaps.outer.left = [\n    { monitor.\"built-in\" = 30 },\n    { monitor.\"LG Ultra HD\" = 30 },\n    10,\n]\ngaps.outer.bottom = [\n    { monitor.\"built-in\" = 10 },\n    { monitor.\"LG Ultra HD\" = 30 },\n    10,\n]\ngaps.outer.top = [\n    { monitor.\"built-in\" = 10 },\n    { monitor.\"LG Ultra HD\" = 60 },\n    30,\n]\ngaps.outer.right = [\n    { monitor.\"built-in\" = 10 },\n    { monitor.\"LG Ultra HD\" = 30 },\n    10,\n]\n\n# Visual indent makes it easier to understand that containers of the same orientation are nested.\n# If you have 'enable-normalization-opposite-orientation-for-nested-containers' enabled then\n# there is no way to observe the indent\nindent-for-nested-containers-with-the-same-orientation = 30\n\n# 'main' binding mode declaration\n# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes\n# 'main' binding mode must be always presented\n[mode.main.binding]\n\n# All possible keys:\n# - Letters.        a, b, c, ..., z\n# - Numbers.        0, 1, 2, ..., 9\n# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9\n# - F-keys.         f1, f2, ..., f20\n# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,\n#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab\n# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,\n#                   keypadMinus, keypadMultiply, keypadPlus\n# - Arrows.         left, down, up, right\n\n# All possible modifiers: cmd, alt, ctrl, shift\n\n# All possible commands: https://nikitabobko.github.io/AeroSpace/commands.html\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#layout\nalt-slash = 'layout tiles horizontal vertical'\nalt-comma = 'layout accordion horizontal vertical'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#focus\nalt-h = ['focus left', 'exec-and-forget sketchybar --trigger change-focused-window']\nalt-j = ['focus down', 'exec-and-forget sketchybar --trigger change-focused-window']\nalt-k = ['focus up', 'exec-and-forget sketchybar --trigger change-focused-window']\nalt-l = ['focus right', 'exec-and-forget sketchybar --trigger change-focused-window']\n\nalt-ctrl-f = 'fullscreen'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#move\nalt-shift-h = ['move left', 'exec-and-forget sketchybar --trigger move-window']\nalt-shift-j = ['move down', 'exec-and-forget sketchybar --trigger move-window']\nalt-shift-k = ['move up', 'exec-and-forget sketchybar --trigger move-window']\nalt-shift-l = ['move right', 'exec-and-forget sketchybar --trigger move-window']\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#resize\nalt-shift-minus = 'resize smart -50'\nalt-shift-equal = 'resize smart +50'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#workspace\nalt-y = ['workspace 0', 'exec-and-forget sketchybar --trigger change-focused-workspace']\nalt-u = ['workspace 1', 'exec-and-forget sketchybar --trigger change-focused-workspace']\nalt-i = ['workspace 2', 'exec-and-forget sketchybar --trigger change-focused-workspace']\nalt-o = ['workspace 3', 'exec-and-forget sketchybar --trigger change-focused-workspace']\nalt-p = ['workspace 4', 'exec-and-forget sketchybar --trigger change-focused-workspace']\n\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#move-node-to-workspace\nalt-shift-y = ['move-node-to-workspace 0', 'exec-and-forget sketchybar --trigger move-window']\nalt-shift-u = ['move-node-to-workspace 1', 'exec-and-forget sketchybar --trigger move-window']\nalt-shift-i = ['move-node-to-workspace 2', 'exec-and-forget sketchybar --trigger move-window']\nalt-shift-o = ['move-node-to-workspace 3', 'exec-and-forget sketchybar --trigger move-window']\nalt-shift-p = ['move-node-to-workspace 4', 'exec-and-forget sketchybar --trigger move-window']\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#workspace-back-and-forth\nalt-tab = 'workspace-back-and-forth'\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#move-workspace-to-monitor\nalt-shift-tab = 'move-workspace-to-monitor --wrap-around next'\n\n# See: https://nikitabobko.github.io/AeroSpace/commands.html#mode\nalt-shift-semicolon = 'mode service'\nalt-shift-slash = 'mode join'\n\n# 'service' binding mode declaration.\n# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes\n[mode.service.binding]\nr = ['flatten-workspace-tree', 'mode main'] # reset layout\n#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2\nf = [\n    'layout floating tiling',\n    'mode main',\n] # Toggle between floating and tiling layout\nbackspace = ['close-all-windows-but-current', 'mode main']\nesc = ['reload-config', 'mode main']\n\n# 'join' binding mode declaration\n# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes\n[mode.join.binding]\nalt-shift-h = ['join-with left', 'mode main']\nalt-shift-j = ['join-with down', 'mode main']\nalt-shift-k = ['join-with up', 'mode main']\nalt-shift-l = ['join-with right', 'mode main']\nesc = 'mode main'\n```\n\n\n\nsketchybarrc:\n```\n#! /bin/bash\n\nsource ~/.config/sketchybar/sketchybar-app-font/dist/icon_map.sh\n\nPLUGIN_DIR=\"$CONFIG_DIR/plugins\"\n\nBAR_COLOR=0xff22202b\nMAIN_COLOR=0xffa17fa7\nACCENT_COLOR=0xffe19286\n\nbar=(\n  height=32\n  # color=$BAR_COLOR\n  color=0x000000\n  # border_color=$MAIN_COLOR\n  # border_width=1\n  # corner_radius=10\n  shadow=off\n  position=top\n  sticky=on\n  padding_right=10\n  padding_left=10\n  y_offset=5\n  margin=15\n  notch_width=0\n)\n\nsketchybar --bar \"${bar[@]}\"\n\ndefault=(\n  padding_left=5\n  padding_right=5\n  label.font=\"Hack Nerd Font:Bold:14.0\"\n  icon.color=$MAIN_COLOR\n  label.color=$MAIN_COLOR\n  icon.padding_left=4\n  icon.padding_right=4\n  label.padding_left=4\n  label.padding_right=4\n)\n\nsketchybar --default \"${default[@]}\"\n\nsketchybar --add event aerospace-workspace-change\nsketchybar --add event change-focused-workspace\nsketchybar --add event change-focused-window\nsketchybar --add event move-window-within-workspace\nsketchybar --add event change-workspace\n\n\nfor sid in $(aerospace list-workspaces --all); do\n  label=(\n    label=\"$sid\"\n    label.color=$MAIN_COLOR\n    label.padding_right=13\n    script=\"$CONFIG_DIR/plugins/aerospace.sh change-focused-workspace $sid\"\n  )\n  sketchybar --add item label.$sid left \\\n    --subscribe label.$sid change-focused-workspace \\\n    --set label.$sid \"${label[@]}\"\n\n  icons=()\n  while IFS= read -r line; do\n\n    window_id=$(echo $line | awk -F ' \\\\| ' '{print $1}')\n    icons+=(\"icon.$window_id\")\n\n    #this is to set the focused window a highlighted color\n    # focused_window_info=$(aerospace list-windows --focused)\n    focused_window_id=$(echo $focused_window_info | awk -F ' \\\\| ' '{print $1}')\n    # echo $focused_window_id\n    if [ \"$window_id\" = \"$focused_window_id\" ]; then\n        icon_color=$ACCENT_COLOR\n    else\n        icon_color=$MAIN_COLOR\n    fi\n    # echo $icon_color\n    \n\n    app_name=$(echo $line | awk -F ' \\\\| ' '{print $2}')\n    __icon_map \"${app_name}\"\n\n    icon=(\n      icon=\"${icon_result}\"\n      icon.font=\"sketchybar-app-font:Regular:20.0\"\n      icon.color=\"$icon_color\"\n      label.align=center\n      click_script=\"aerospace workspace $sid\"\n      script=\"$CONFIG_DIR/plugins/aerospace.sh change-focused-window $window_id\"\n    )\n\n    sketchybar --add item icon.$window_id left \\\n      --subscribe icon.$window_id change-focused-workspace change-focused-window \\\n      --set icon.$window_id \"${icon[@]}\"\n  done \u003c \u003c(aerospace list-windows --workspace \"$sid\")\n\n  echo ${icons[@]}\n  space=(\n    background.height=26\n    background.corner_radius=4\n    background.border_color=$MAIN_COLOR\n    background.border_width=1\n    background.color=0x00000000\n    script=\"$CONFIG_DIR/plugins/aerospace.sh create-delete-window\"\n  )\n  sketchybar --add bracket space.$sid label.$sid ${icons[@]} \\\n    --subscribe space.$sid space_windows_change \\\n    --set space.$sid \"${space[@]}\"\n\ndone\n\nsketchybar --add item clock right \\\n           --set clock update_freq=10 icon=  script=\"$PLUGIN_DIR/clock.sh\" \\\n           --add item volume right \\\n           --set volume script=\"$PLUGIN_DIR/volume.sh\" \\\n           --subscribe volume volume_change \\\n           --add item battery right \\\n           --set battery update_freq=120 script=\"$PLUGIN_DIR/battery.sh\" \\\n           --subscribe battery system_woke power_source_change\n\n##### Force all scripts to run the first time (never do this in a script) #####\n# sketchybar --update\n```\n\n\naerospace.sh:\n```\n#!/usr/bin/env bash\n\nMAIN_COLOR=0xffa17fa7\nACCENT_COLOR=0xffe19286\n\nif [ \"$1\" = \"change-focused-window\" ]; then\n    echo \"change-focused-window\"\n    focused_window_info=$(aerospace list-windows --focused)\n    focused_window_id=$(echo $focused_window_info | awk -F ' \\\\| ' '{print $1}')\n    if [ \"$2\" = \"$focused_window_id\" ]; then\n        sketchybar --set $NAME icon.color=$ACCENT_COLOR\n    else\n        sketchybar --set $NAME icon.color=$MAIN_COLOR\n    fi\nfi\n\nif [ \"$1\" = \"change-focused-workspace\" ]; then\n    echo \"change-focused-workspace\"\n    focused_workspace=$(aerospace list-workspaces --focused)\n    if [ \"$2\" = \"$focused_workspace\" ]; then\n        sketchybar --set $NAME label.color=$ACCENT_COLOR\n    else\n        sketchybar --set $NAME label.color=$MAIN_COLOR\n    fi\nfi\n\nif [ \"$1\" = \"move-window-within-workspace\" ]; then\n    echo \"move-window-within-workspace\"\n    focused_workspace=$(aerospace list-workspaces --focused)\n    if [ \"$2\" = \"$focused_workspace\" ]; then\n        sketchybar --set $NAME label.color=$ACCENT_COLOR\n    else\n        sketchybar --set $NAME label.color=$MAIN_COLOR\n    fi\nfi\n\n\nif [ \"$1\" = \"create-delete-window\" ]; then\n    echo \"create-delete\"\n    apps_in_window=$(aerospace list-windows --workspace $(aerospace list-workspaces --focused))\n    # echo $apps_in_window\n    # echo $INFO\n\n    #USE A REGEX IN SKETCHYBAR. Prefix all your icons with their window id.\n    sketchybar --remove /icon./\n    sketchybar --remove /label./\n    sketchybar --remove /space./\n\n    # #Re-render all app icons in all workspaces\n    source ~/.config/sketchybar/sketchybar-app-font/dist/icon_map.sh\n\n    PLUGIN_DIR=\"$CONFIG_DIR/plugins\"\n\n    BAR_COLOR=0xff22202b\n    MAIN_COLOR=0xffa17fa7\n    ACCENT_COLOR=0xffe19286\n    default=(\n    padding_left=5\n    padding_right=5\n    label.font=\"Hack Nerd Font:Bold:14.0\"\n    icon.color=$MAIN_COLOR\n    label.color=$MAIN_COLOR\n    icon.padding_left=4\n    icon.padding_right=4\n    label.padding_left=4\n    label.padding_right=4\n    )\n\n    sketchybar --default \"${default[@]}\"\n\n    for sid in $(aerospace list-workspaces --all); do\n        label=(\n            label=\"$sid\"\n            label.color=$MAIN_COLOR\n            label.padding_right=13\n            script=\"$CONFIG_DIR/plugins/aerospace.sh change-focused-workspace $sid\"\n        )\n        sketchybar --add item label.$sid left \\\n            --subscribe label.$sid change-focused-workspace \\\n            --set label.$sid \"${label[@]}\"\n\n        icons=()\n        while IFS= read -r line; do\n            window_id=$(echo $line | awk -F ' \\\\| ' '{print $1}')\n            icons+=(\"icon.$window_id\")\n\n            app_name=$(echo $line | awk -F ' \\\\| ' '{print $2}')\n            __icon_map \"${app_name}\"\n\n            icon=(\n            icon=\"${icon_result}\"\n            icon.font=\"sketchybar-app-font:Regular:20.0\"\n            label.align=center\n            click_script=\"aerospace workspace $sid\"\n            script=\"$CONFIG_DIR/plugins/aerospace.sh change-focused-window $window_id\"\n            )\n\n            sketchybar --add item icon.$window_id left \\\n            --subscribe icon.$window_id change-focused-workspace change-focused-window \\\n            --set icon.$window_id \"${icon[@]}\"\n        done \u003c \u003c(aerospace list-windows --workspace \"$sid\")\n\n        # echo ${icons[@]}\n        space=(\n            background.height=26\n            background.corner_radius=4\n            background.border_color=$MAIN_COLOR\n            background.border_width=1\n            background.color=0x00000000\n            script=\"$CONFIG_DIR/plugins/aerospace.sh create-delete-window\"\n        )\n        sketchybar --add bracket space.$sid label.$sid ${icons[@]} \\\n            --subscribe space.$sid space_windows_change \\\n            --set space.$sid \"${space[@]}\"\n\n    done\n\nfi\n\n#also need MOVE window. get the order from aerospace list-windows --workspace. bind the \"move\" aerospace commands in aerospace.toml to exec 'sketchybar --trigger ...'.\n```","files":null}]}