{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":3,"timestamp":1707348069,"nonce":"v3HtECQ3KYaXmlMiJcmBhhqZBOo=","metadata":{"github-id":"IC_kwDOJl1IZM5zOMYX","github-url":"https://github.com/nikitabobko/AeroSpace/issues/60#issuecomment-1933100567"},"message":"@Marty-W thanks for the explanation, I get it now\n\nWhen you mentioned workspace-specific gaps, I assumed that you'd just make all workspaces that are assigned to the ultrawide monitor have big gaps, but I get it now. You only put big gaps for workspaces that only have one or so windows\n\nThat's an interesting use case for workspace-specific gaps","files":null},{"type":3,"timestamp":1707350162,"nonce":"ChtklrcIt8cNg6JVshGRdMt77E8=","metadata":{"github-id":"IC_kwDOJl1IZM5zOUgY","github-url":"https://github.com/nikitabobko/AeroSpace/issues/60#issuecomment-1933133848"},"message":"Currently, it's possible to have monitor-specific gaps\n```\ngaps.outer.top = [{ monitor.\"built-in\" = 0 }, 24] # (1)\n```\n\nThat's how it can be extended to support workspace-specific gaps:\n```\ngaps.outer.top = [{ monitor.\"built-in\" = 0 }, { workspace.1 = 10 }, 24] # (2)\n```\n\nBut I think we can do even better to support a pattern like \"window count\" (I'm brainstorming, it's not a final design, though I encourage you to share your thoughts)\n```\n# (3)\ngaps.outer.left = [{ window-count-range.\"1..2\" = 200 }, 0]\ngaps.outer.right = [{ window-count-range.\"1..2\" = 200 }, 0] # Ugh, there is no way to conjugate conditions :(\n\n# (4)\ngaps.outer.left = [{ if.window-count-range = \"1..2\", if.monitor = \"ultrawide-monitor-name-pattern\", value = 200 }, 0]\ngaps.outer.right = [{ if.window-count-range = \"1..2\", if.monitor = \"ultrawide-monitor-name-pattern\", value = 200 }, 0]\n# Yay! Conjugated conditions! \n```\n\n**Note to myself:** I should stop turning TOML into a programming language, it'd be easier if AeroSpace used Lua for configuration\n\n**Note:** When I refer to \"monitor pattern\" I mean monitor pattern name as in https://nikitabobko.github.io/AeroSpace/guide.html#assign-workspaces-to-monitors","files":null},{"type":6,"timestamp":1728340089,"nonce":"ol32kDfO8xj7SiJOvTDvRjXEVI0=","metadata":{"github-id":"UCE_lALOJl1IZM5zOUgYzlGwxKQ"},"target":"b48a9e70f24830e48af0cb10661e59873895e339f4c90092a1d7c998ebdfb072","message":"Currently, it's possible to have monitor-specific gaps\n```\ngaps.outer.top = [{ monitor.\"built-in\" = 0 }, 24] # (1)\n```\n\nThat's how it can be extended to support workspace-specific gaps:\n```\ngaps.outer.top = [{ monitor.\"built-in\" = 0 }, { workspace.1 = 10 }, 24] # (2)\n```\n\nBut I think we can do even better to support a pattern like \"window count\" (I'm brainstorming, it's not a final design, though I encourage you to share your thoughts)\n```\n# (3)\ngaps.outer.left = [{ window-count-range.\"1..2\" = 200 }, 0]\ngaps.outer.right = [{ window-count-range.\"1..2\" = 200 }, 0] # Ugh, there is no way to conjugate conditions :(\n\n# (4)\ngaps.outer.left = [{ if.window-count-range = \"1..2\", if.monitor = \"ultrawide-monitor-name-pattern\", value = 200 }, 0]\ngaps.outer.right = [{ if.window-count-range = \"1..2\", if.monitor = \"ultrawide-monitor-name-pattern\", value = 200 }, 0]\n# Yay! Conjugated conditions! \n```\n\n**Note to myself:** I should stop turning TOML into a programming language, it'd be easier if AeroSpace used Lua for configuration\n\n**Note:** When I refer to \"monitor pattern\" I mean monitor pattern name as in https://nikitabobko.github.io/AeroSpace/guide.html#assign-workspaces-to-monitors\n\n**UPD:** forget about it. max-width is better https://github.com/nikitabobko/AeroSpace/issues/60#issuecomment-2237504168","files":null},{"type":3,"timestamp":1707350691,"nonce":"PTfuQSEQn+hOYafBdoLwCsj0bss=","metadata":{"github-id":"IC_kwDOJl1IZM5zOWYC","github-url":"https://github.com/nikitabobko/AeroSpace/issues/60#issuecomment-1933141506"},"message":"\u003e window-count-range\n\nOr more correctly: `tiling-window-count-range` (floating windows shouldn't be counted)","files":null},{"type":5,"timestamp":1707351009,"nonce":"PxcNyY/fHV2/J4J99CB4Cv6agFQ=","metadata":{"github-id":"LE_lADOJl1IZM555DFuzwAAAAK7t4sf"},"added":["design-needed"],"removed":[]},{"type":5,"timestamp":1707351023,"nonce":"8nBQgJFwWCNKVq9L12ar2tRkTcA=","metadata":{"github-id":"LE_lADOJl1IZM555DFuzwAAAAK7t5Bm"},"added":["feature-proposal"],"removed":[]}]}