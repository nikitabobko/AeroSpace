{"author":{"id":"cfda1bbd0f84cadf7e3398c43101366828ad3c44dcd831c8c9268e6eafd37afa"},"ops":[{"type":3,"timestamp":1734769983,"nonce":"3yGQQG56VBMFVKDubzeeHJ35yLc=","metadata":{"github-id":"IC_kwDOJl1IZM6YeL65","github-url":"https://github.com/nikitabobko/AeroSpace/issues/2#issuecomment-2558049977"},"message":"I've updated @farzadmf 's script with support for different pip window titles. I tried to get it to support multple pip windows at once but no luck yet.\n\n```sh\n#!/usr/bin/env sh\n# This seems to only work a single pip window at a time for now\n\nws=${1:-$AEROSPACE_FOCUSED_WORKSPACE}\n\nIFS=$'\\n' all_wins=$(aerospace list-windows --all --format '%{window-id}|%{app-name}|%{window-title}|%{monitor-id}|%{workspace}')\nIFS=$'\\n' all_ws=$(aerospace list-workspaces --all --format '%{workspace}|%{monitor-id}')\n\n# Array of possible window titles\npip_titles=(\"Picture-in-picture\" \"Picture-in-Picture\" \"Picture in Picture\" \"Picture in picture\")\n\n# Function to find matching PIP windows\nfind_pip_windows() {\n  local titles=(\"$@\")\n  local result=\"\"\n  for title in \"${titles[@]}\"; do\n    local matches=$(printf '%s\\n' \"$all_wins\" | rg \"$title\")\n    result=\"$result\"$'\\n'\"$matches\"\n  done\n  echo \"$result\" | sed '/^\\s*$/d' # Remove empty lines\n}\n\npip_wins=$(find_pip_windows \"${pip_titles[@]}\")\ntarget_mon=$(printf '%s\\n' \"$all_ws\" | rg \"^$ws\" | cut -d'|' -f2 | xargs)\n\nmove_win() {\n  local win=\"$1\"\n\n  [[ -n $win ]] || return 0\n\n  local win_mon=$(echo \"$win\" | cut -d'|' -f4 | xargs)\n  local win_id=$(echo \"$win\" | cut -d'|' -f1 | xargs)\n  local win_app=$(echo \"$win\" | cut -d'|' -f2 | xargs)\n  local win_ws=$(echo \"$win\" | cut -d'|' -f5 | xargs)\n\n  # Skip if the monitor is already the target monitor or if the workspace matches\n  [[ $target_mon != \"$win_mon\" ]] \u0026\u0026 return 0\n  [[ $ws == \"$win_ws\" ]] \u0026\u0026 return 0\n\n  aerospace move-node-to-workspace --window-id \"$win_id\" \"$ws\"\n}\n\n# Process each PIP window found\necho \"$pip_wins\" | while IFS= read -r win; do\n  move_win \"$win\"\ndone\n```","files":null}]}