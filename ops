{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":3,"timestamp":1716837435,"nonce":"I0+iC+lEaEqsCh7Hqo/qLIAi6fo=","metadata":{"github-id":"IC_kwDOJl1IZM5_MZ5e","github-url":"https://github.com/nikitabobko/AeroSpace/issues/244#issuecomment-2133958238"},"message":"The `move` command works like that because it allows to avoid introduction of a separate command for moving windows inside the containers\n\nIn your example, if you want to move `window 2` far right, you can simply call `move right` two times in a row\n\nBut I agree that a flag like `--stay-on-the-same-level` for the `move` command could be introduced to make `move` command work as you describe\n\n---\n\n`join-with` command was introduced to \"join\" two leaf nodes (windows) under a common parent container. I didn't design how `join-with` should work when it acts on non-leaf nodes. The way it works right now is accidental\n\nCurrently, it works this way:\n```\nh_tiles\n  window 1\n  window 2 (focused)\n  v_tiles\n    window 3\n    window 4\n```\n`join-with right` will result in the following layout\n```\nh_tiles\n  window 1\n  v_tiles\n    window 2 (focused)\n    h_tiles\n      window 3\n      window 4\n```\nmaybe it'd be better to make `join-with` command behave as `move` command in this case. This way, you could use the combination of `move --stay-on-the-same-level` + `join-with` for \"strict\" tree manipulations","files":null},{"type":6,"timestamp":1716837535,"nonce":"hjq6sQn2wD3+GgQ7KATVtu1Q4B8=","metadata":{"github-id":"UCE_lALOJl1IZM5_MZ5ezkcrI-8"},"target":"441d87505789526a9d96d9b20cd7f7f164ce2d6ff8acf6bbe43818961560f423","message":"The `move` command works like that because it allows to avoid introduction of a separate command for moving windows inside the containers\n\nIn your example, if you want to move `window 2` far right, you can simply call `move right` two times in a row\n\nBut I agree that a flag like `--stay-on-the-same-level` for the `move` command could be introduced to make `move` command work as you describe\n\n---\n\n`join-with` command was introduced to \"join\" two leaf nodes (windows) under a common parent container. I didn't design how `join-with` should work when it acts on non-leaf nodes. The way it works right now is accidental\n\nCurrently, it works this way:\n```\nh_tiles\n  window 1\n  window 2 (focused)\n  v_tiles\n    window 3\n    window 4\n```\n`join-with right` will result in the following layout (if normalization are enabled)\n```\nh_tiles\n  window 1\n  v_tiles\n    window 2 (focused)\n    h_tiles\n      window 3\n      window 4\n```\nmaybe it'd be better to make `join-with` command behave as `move` command in this case. This way, you could use the combination of `move --stay-on-the-same-level` + `join-with` for \"strict\" tree manipulations","files":null},{"type":6,"timestamp":1716837574,"nonce":"WybItEIlCoUdroivL995LOuHrl8=","metadata":{"github-id":"UCE_lALOJl1IZM5_MZ5ezkcrJc4"},"target":"441d87505789526a9d96d9b20cd7f7f164ce2d6ff8acf6bbe43818961560f423","message":"The `move` command works like that because it allows to avoid introduction of a separate command for moving windows inside the containers. It's the way `move` command worked in i3 and it's done this way on purpose\n\nIn your example, if you want to move `window 2` far right, you can simply call `move right` two times in a row\n\nBut I agree that a flag like `--stay-on-the-same-level` for the `move` command could be introduced to make `move` command work as you describe\n\n---\n\n`join-with` command was introduced to \"join\" two leaf nodes (windows) under a common parent container. I didn't design how `join-with` should work when it acts on non-leaf nodes. The way it works right now is accidental\n\nCurrently, it works this way:\n```\nh_tiles\n  window 1\n  window 2 (focused)\n  v_tiles\n    window 3\n    window 4\n```\n`join-with right` will result in the following layout (if normalization are enabled)\n```\nh_tiles\n  window 1\n  v_tiles\n    window 2 (focused)\n    h_tiles\n      window 3\n      window 4\n```\nmaybe it'd be better to make `join-with` command behave as `move` command in this case. This way, you could use the combination of `move --stay-on-the-same-level` + `join-with` for \"strict\" tree manipulations","files":null},{"type":6,"timestamp":1716837619,"nonce":"cONV+ONLpIcPw5ZST5dbroSmklQ=","metadata":{"github-id":"UCE_lALOJl1IZM5_MZ5ezkcrJ7k"},"target":"441d87505789526a9d96d9b20cd7f7f164ce2d6ff8acf6bbe43818961560f423","message":"The `move` command works like that because it allows to avoid introduction of a separate command for moving windows inside the containers. It's the way `move` command worked in i3 and it's done this way on purpose\n\nIn your example, if you want to move `window 2` far right, you can simply call `move right` two times in a row\n\nBut I agree that a flag like `--stay-on-the-same-level` for the `move` command could be introduced to make `move` command work as you describe\n\n---\n\n`join-with` command was introduced to \"join\" two leaf nodes (windows) under a common parent container. I didn't design how `join-with` should work when it acts on non-leaf nodes. The way it works right now is accidental\n\nCurrently, it works this way:\n```\nh_tiles\n  window 1\n  window 2 (focused)\n  v_tiles\n    window 3\n    window 4\n```\n`join-with right` will result in the following layout (if normalizations are enabled)\n```\nh_tiles\n  window 1\n  v_tiles\n    window 2 (focused)\n    h_tiles\n      window 3\n      window 4\n```\nmaybe it'd be better to make `join-with` command behave as `move` command in this case. This way, you could use the combination of `move --stay-on-the-same-level` + `join-with` for \"strict\" tree manipulations","files":null},{"type":6,"timestamp":1716837691,"nonce":"QVfIbWBLEhoa4V61NiNHw6tbxiA=","metadata":{"github-id":"UCE_lALOJl1IZM5_MZ5ezkcrKxI"},"target":"441d87505789526a9d96d9b20cd7f7f164ce2d6ff8acf6bbe43818961560f423","message":"The `move` command works like that because it allows to avoid introduction of a separate command for moving windows inside the containers. It's the way `move` command worked in i3 and it's done this way on purpose\n\nIn your example, if you want to move `window 2` far right, you can simply call `move right` two times in a row\n\nBut I agree that a flag like `--stay-on-the-same-level` for the `move` command could be introduced to make `move` command work as you describe\n\n---\n\n`join-with` command was introduced to \"join\" two leaf nodes (windows) under a common parent container. I didn't design how `join-with` should work when it acts on non-leaf nodes. The way it works right now is accidental\n\nCurrently, it works this way:\n```\nh_tiles\n  window 1\n  window 2 (focused)\n  v_tiles\n    window 3\n    window 4\n```\n`join-with right` will result in the following layout (if normalizations are enabled)\n```\nh_tiles\n  window 1\n  v_tiles\n    window 2 (focused)\n    h_tiles\n      window 3\n      window 4\n```\nmaybe it'd be better to make `join-with` command behave as a vanilla `move` command in this case (to just move the window inside the container). This way, you could use the combination of `move --stay-on-the-same-level` + `join-with` for \"strict\" tree manipulations","files":null},{"type":6,"timestamp":1716837747,"nonce":"pN+nPiisW1QkO4MioCv7mJWXKbQ=","metadata":{"github-id":"UCE_lALOJl1IZM5_MZ5ezkcrLc4"},"target":"441d87505789526a9d96d9b20cd7f7f164ce2d6ff8acf6bbe43818961560f423","message":"The `move` command works like that because it allows to avoid introduction of a separate command for moving windows inside the containers. It's the way `move` command worked in i3 and it's done this way on purpose\n\nIn your example, if you want to move `window 2` far right, you can simply call `move right` two times in a row\n\nBut I agree that a flag like `--stay-on-the-same-level` for the `move` command could be introduced to make `move` command work as you describe\n\n---\n\n`join-with` command was introduced to \"join\" two leaf nodes (windows) under a common parent container. I didn't design how `join-with` should work when it acts on non-leaf nodes. The way it works for non-leaf nodes right now is accidental\n\nCurrently, it works this way:\n```\nh_tiles\n  window 1\n  window 2 (focused)\n  v_tiles\n    window 3\n    window 4\n```\n`join-with right` will result in the following layout (if normalizations are enabled)\n```\nh_tiles\n  window 1\n  v_tiles\n    window 2 (focused)\n    h_tiles\n      window 3\n      window 4\n```\nmaybe it'd be better to make `join-with` command behave as a vanilla `move` command in this case (to just move the window inside the container). This way, you could use the combination of `move --stay-on-the-same-level` + `join-with` for \"strict\" tree manipulations","files":null},{"type":5,"timestamp":1716880657,"nonce":"K64WbWD7dMdUG7a7eWVOY/FkM3s=","metadata":{"github-id":"LE_lADOJl1IZM6KQYFnzwAAAAMEDTN6"},"added":["question/discussion"],"removed":[]},{"type":4,"timestamp":1717139946,"nonce":"QNRNXTcHlZD+JX22yGRantKeDsE=","metadata":{"github-id":"CE_lADOJl1IZM6KQYFnzwAAAAMGnWz9"},"status":2}]}