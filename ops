{"author":{"id":"1afdfe2409dc9cd92b3dcbe0b2e04892c2aa043692115d70e6bbb740d1b01574"},"ops":[{"type":3,"timestamp":1710469487,"nonce":"/S2tLn4m8OJAXqwm4p/jL3T3v44=","metadata":{"github-id":"IC_kwDOJl1IZM53I7fI","github-url":"https://github.com/nikitabobko/AeroSpace/issues/183#issuecomment-1998829512"},"message":"Sure! It would be nice to have something like that.\n\nI realized I wasn't clear about what I said of failing commands. I'll explain it better here:\n\nI'd still like to create implicit containers when in a situation like\n\n```\nv_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nthen executing `move left` would give\n\n```\nh_tiles\n├── window 1 (focused)\n└── v_tiles\n    ├── window 2\n    └── window 3\n```\n\nI agree that this case shouldn't  fail, because it changed the way windows are being displayed. I think it should fail when executing `move left` in a case like this:\n\n```\nh_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nI think It doesn't make sense to have a h_tiles node to with a h_tiles node child, since they would be displayed the same way in the monitor. In a case like that, I think it would make sense for the `move left` command to give a non-zero exit code.\n\nI think this is a simpler workaround for the problem. What do you think?","files":null},{"type":6,"timestamp":1710469507,"nonce":"tAWL15pT0nLHhDrIwVOJ6HafJLo=","metadata":{"github-id":"UCE_lALOJl1IZM53I7fIzkIYnbI"},"target":"8a7e550cf67ca3c7525d1c0d210e2a842609ce0a8bd2e5d4e53e4f6d4c86c77b","message":"Sure! It would be nice to have something like that.\n\nI realized I wasn't clear about what I said about failing commands. I'll explain it better here:\n\nI'd still like to create implicit containers when in a situation like\n\n```\nv_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nthen executing `move left` would give\n\n```\nh_tiles\n├── window 1 (focused)\n└── v_tiles\n    ├── window 2\n    └── window 3\n```\n\nI agree that this case shouldn't  fail, because it changed the way windows are being displayed. I think it should fail when executing `move left` in a case like this:\n\n```\nh_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nI think It doesn't make sense to have a h_tiles node to with a h_tiles node child, since they would be displayed the same way in the monitor. In a case like that, I think it would make sense for the `move left` command to give a non-zero exit code.\n\nI think this is a simpler workaround for the problem. What do you think?","files":null},{"type":6,"timestamp":1710469578,"nonce":"M9QVXbtvjXbo7yL0QYkeUA9gWGM=","metadata":{"github-id":"UCE_lALOJl1IZM53I7fIzkIYoHY"},"target":"8a7e550cf67ca3c7525d1c0d210e2a842609ce0a8bd2e5d4e53e4f6d4c86c77b","message":"Sure! It would be nice to have something like that.\n\nI realized I wasn't clear when I talked about failing commands. I'll explain it better here:\n\nI'd still like to create implicit containers when in a situation like\n\n```\nv_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nthen executing `move left` would give\n\n```\nh_tiles\n├── window 1 (focused)\n└── v_tiles\n    ├── window 2\n    └── window 3\n```\n\nI agree that this case shouldn't  fail, because it changed the way windows are being displayed. I think it should fail when executing `move left` in a case like this:\n\n```\nh_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nI think It doesn't make sense to have a h_tiles node to with a h_tiles node child, since they would be displayed the same way in the monitor. In a case like that, I think it would make sense for the `move left` command to give a non-zero exit code.\n\nI think this is a simpler workaround for the problem. What do you think?","files":null},{"type":6,"timestamp":1710469612,"nonce":"lYPG6Mydqk/fOhSQuXIvu37H4zc=","metadata":{"github-id":"UCE_lALOJl1IZM53I7fIzkIYoek"},"target":"8a7e550cf67ca3c7525d1c0d210e2a842609ce0a8bd2e5d4e53e4f6d4c86c77b","message":"Sure! It would be nice to have something like that.\n\nI realized I wasn't clear when I talked about failing commands. I'll explain it better here:\n\nI'd still like to create implicit containers when in a situation like\n\n```\nv_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nthen executing `move left` would give\n\n```\nh_tiles\n├── window 1 (focused)\n└── v_tiles\n    ├── window 2\n    └── window 3\n```\n\nI agree that this case shouldn't  fail, because it changes the way windows are being displayed. I think it should fail when executing `move left` in a case like this:\n\n```\nh_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nI think It doesn't make sense to have a h_tiles node to with a h_tiles node child, since they would be displayed the same way in the monitor. In a case like that, I think it would make sense for the `move left` command to give a non-zero exit code.\n\nI think this is a simpler workaround for the problem. What do you think?","files":null},{"type":6,"timestamp":1710470309,"nonce":"VogfMfZ42kqYdu/AtiHvNHhx3/k=","metadata":{"github-id":"UCE_lALOJl1IZM53I7fIzkIYvZo"},"target":"8a7e550cf67ca3c7525d1c0d210e2a842609ce0a8bd2e5d4e53e4f6d4c86c77b","message":"Sure! It would be nice to have something like that.\n\nI realized I wasn't clear when I talked about failing commands. I'll explain it better here:\n\nI'd still like to create implicit containers when in a situation like\n\n```\nv_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nthen executing `move left` would give\n\n```\nh_tiles\n├── window 1 (focused)\n└── v_tiles\n    ├── window 2\n    └── window 3\n```\n\nI agree that this case shouldn't  fail, because it changes the way windows are being displayed. I think it should fail when executing `move left` in a case like this:\n\n```\nh_tiles\n├── window 1 (focused)\n├── window 2\n└── window 3\n```\n\nI think It doesn't make sense to have a h_tiles node parent with a h_tiles node child, since they would be displayed the same way in the monitor. In a case like that, I think it would make sense for the `move left` command to give a non-zero exit code.\n\nI think this is a simpler workaround for the problem. What do you think?","files":null}]}