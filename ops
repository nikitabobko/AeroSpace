{"author":{"id":"8ebd2bcca4ddbbc12f0f8c981f17c0fcc791fa429038ff4451dce913dbc3fdd2"},"ops":[{"type":3,"timestamp":1736768301,"nonce":"isEvzWankNAhz3PAAWTeK5Uz3j0=","metadata":{"github-id":"IC_kwDOJl1IZM6aMI1O","github-url":"https://github.com/nikitabobko/AeroSpace/issues/465#issuecomment-2586873166"},"message":"\u003e Absolutely loving AeroSpace so far! I came across your idea @jaybonthius, and I have to say—I completely relate. As a fellow ultrawide monitor user, I've also been looking for ways to better manage my space without relying on hardware-based solutions like picture-by-picture. Your \"workspace containers\" idea is brilliant, and it got me thinking about how we could take it a step further.\n\u003e \n\u003e For me, the main challenge with ultrawide monitors is the time it takes to set up my layout every session. I’d love the ability to define reusable layout templates in the config file and assign them to workspaces. This way, we could start with predefined container structures and manually move apps into place without having to recreate everything from scratch.\n\u003e \n\u003e Please take this as a starting point for discussion—I haven’t explored AeroSpace’s code yet, so forgive me if I’ve missed any technical hurdles or edge cases!\n\u003e \n\u003e ### **Proposal: Custom Layout Templates and Workspace Assignments**\n\u003e #### **What I’m Suggesting**\n\u003e 1. **Custom Layout Templates**: Let users define reusable container tree structures in the config file.\n\u003e 2. **Workspace Assignments**: Allow these templates to be assigned to one or more workspaces.\n\u003e \n\u003e By starting with pre-defined layouts (and persistent tile/containers), users can spend less time fiddling with container setups and more time focusing on their workflow. Once the workspace is initialized with the template, users can manually move apps in \u0026 out of containers.\n\u003e \n\u003e #### **How It Could Look**\n\u003e Here’s an example of what a \"coding\" workspace template might look like in the configuration file:\n\u003e \n\u003e ```toml\n\u003e [workspace-templates]\n\u003e \n\u003e [[workspace-templates.coding]]\n\u003e layout = \"tiles\"\n\u003e orientation = \"horizontal\"\n\u003e containers = [\n\u003e     { id = \"container-main\", layout = \"tiles\", orientation = \"vertical\" },\n\u003e     { id = \"container-side\", layout = \"tiles\", orientation = \"vertical\" }\n\u003e ]\n\u003e \n\u003e [[workspace-assignments]]\n\u003e workspace-1-template = \"coding\"\n\u003e ```\n\u003e \n\u003e This would set up Workspace 1 with a layout like this:\n\u003e \n\u003e ```\n\u003e coding (horizontal root)\n\u003e ├── container-main (vertical)\n\u003e │   ├── [empty]\n\u003e │   └── [empty]\n\u003e └── container-side (vertical)\n\u003e     ├── [empty]\n\u003e     └── [empty]\n\u003e ```\n\u003e \n\u003e Again, when Workspace 1 is activated, it would automatically create this container tree. Users could then move their apps into the desired containers using existing AeroSpace commands (`move`, `join-with`, etc.).\n\u003e \n\u003e #### **Why This Could Be Helpful**\n\u003e * **Streamlined Setup**: No more manually recreating layouts every time you start a session.\n\u003e * **Reusable Layouts**: Templates can be shared across workspaces or even between users.\n\u003e * **Flexibility**: By being able to assign templates to workspaces, users still have full control over app placement without locking into rigid configurations.\n\u003e \n\u003e #### **Potential Challenges**\n\u003e 1. **Template Complexity**: Defining deeply nested container structures may be complex for some users. Clear documentation with examples would help simplify this.\n\u003e 2. **Dynamic Adjustments**: Users may need to adjust layouts dynamically after activation. Ensure manual modifications persist until re-initialized.\n\u003e 3. **Error Recovery**: Misconfigured templates should not disrupt existing workflows. Implement robust error handling to fall back gracefully.\n\u003e \n\u003e What do you all think? I’d love to hear your thoughts or suggestions for improvement! Happy to refine this further if it sparks interest! In the meantime, I'll fork the codebase and see if I can't implement it myself (no promises)!\n\u003e \n\u003e P.S. For fun, here's the workspace I've been using on a 7680x2160 display:\n\u003e \n\u003e ```\n\u003e Horizontal Tiles (root node)\n\u003e ├── Vertical Tile\n\u003e │   ├── Horizontal Tile\n\u003e │   │   ├── Obsidian\n\u003e │   │   └── Firefox\n\u003e │   └── Horizontal Tile\n\u003e │       ├── iTerm2\n\u003e │       └── LLM Chat tool\n\u003e ├── VS Code\n\u003e └── Vertical Tile\n\u003e     ├── iMessage\n\u003e     └── Slack\n\u003e ```\n\nI think there is already a ticket with this idea.\nhttps://github.com/nikitabobko/AeroSpace/issues/260","files":null}]}