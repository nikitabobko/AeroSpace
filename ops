{"author":{"id":"5b0aca150db3d0ce9bfe1d44aed7c07cdf45f6be2e059e39f41d14686feee640"},"ops":[{"type":3,"timestamp":1741634208,"nonce":"dcggc5uZaCeJT7/NQFjjgau2c0s=","metadata":{"github-id":"IC_kwDOJl1IZM6hn5jw","github-url":"https://github.com/nikitabobko/AeroSpace/issues/245#issuecomment-2711591152"},"message":"I'm okay with the workspace name being unique and immutable. What I would prefer is a way to alias that name to something else. I wouldn't mind if that alias were enforced to be unique as well, though, perhaps within its own \"alias\" namespace.\n\nThen, a workspace could be referenced by its alias, with the real id as the default alias.\n\nMore importantly, this feature could help me sort spaces in Sketchybar by aliases, enabling me to move workspaces around without needing to swap their contents.","files":null},{"type":3,"timestamp":1742070003,"nonce":"rDt+IjIdsfLbo9kjzp02adkHeJc=","metadata":{"github-id":"IC_kwDOJl1IZM6iinWP","github-url":"https://github.com/nikitabobko/AeroSpace/issues/245#issuecomment-2726983055"},"message":"Using Aerospace got me thinking about this problem.  Here's a refinement of the comment above for review.  If accepted, maybe I'd take a stab at a PR.\n\n- Workspace IDs remain as they are: _immutable_ and _unique_.\n- New workspace _aliases_ occupy a different namespace from IDs and are _mutable_ and _unique_.\n- By default, a workspace is created with an alias identical to its ID (so you don't have to think about an empty alias).\n- A prefix can be used to be explicit about reference \"id: \" or \"alias:\"; otherwise, a plain string looks first for an alias and then for an id to reference a workspace.  This approach disallows a colon in the workspace name.  Another character could be chosen, or we could have a delimiter for the colon.\n- You can change a workspace alias to any other one that isn't already used.\n- Alternatively, if you try to rename a workspace to an alias already given to another workspace, the workspace aliases are atomically swapped, maintaining uniqueness.  Swapping is a valuable workspace reordering operation.\n- `workspace list-workspaces` would \n  - be given an `--aliases` switch to report aliases instead of IDs\n  - have `--format` accept a new `%{alias}` option to get clarity on the assigned alias.\n\nMy hope with this design is to\n- minimize impact to code and configurations already in place\n- allow people to opt out of using the new aliases\n- make for a design that allows people to not worry about the implementation of aliases and primarily work under the illusion that workspaces are renamable (the \"id:\" and \"alias:\" lookup is mostly for API completeness and rigor than something I see myself using).","files":null},{"type":6,"timestamp":1742070037,"nonce":"SRfOEvJ7Dla6tjvndoGIh1pEYnY=","metadata":{"github-id":"UCE_lALOJl1IZM6iinWPzl_6zF8"},"target":"ec446746f8d478c0231a4258c58fd688c7938e815e12f998a09639a3ec3fac50","message":"Using Aerospace got me thinking about this problem.  Here's a refinement of the comment above for review.  If accepted, maybe I'd take a stab at a PR.\n\n- Workspace IDs remain as they are: _immutable_ and _unique_.\n- New workspace _aliases_ occupy a different namespace from IDs and are _mutable_ and _unique_.\n- By default, a workspace is created with an alias identical to its ID (so you don't have to think about an empty alias).\n- A prefix can be used to be explicit about reference \"id: \" or \"alias:\"; otherwise, a plain string looks first for an alias and then for an id to reference a workspace.  This approach disallows a colon in the workspace name.  Another character could be chosen, or we could have a delimiter for the colon.\n- You can change a workspace alias to any other one that isn't already used.\n- Alternatively, if you try to rename a workspace to an alias already given to another workspace, the workspace aliases are atomically swapped, maintaining uniqueness.  Swapping is a valuable workspace reordering operation.\n- `workspace list-workspaces` would \n  - be given an `--aliases` switch to report aliases instead of IDs\n  - have `--format` accept a new `%{alias}` option to get clarity on the assigned alias.\n\nMy hope with this design is to\n- minimize impact to code and configurations already in place\n- allow people to opt out of using the new aliases\n- make for a design that allows people to not worry about the implementation of aliases and primarily work under the illusion that workspaces are renamable (the \"id:\" and \"alias:\" lookup is mostly for API completeness and rigor than something I see myself using).\n\nOr maybe... this whole approach is complex enough that it would be easier to just make IDs properly mutable.","files":null},{"type":6,"timestamp":1742070320,"nonce":"qIr9SYrsfpf7bFxXM8XupjlBaXg=","metadata":{"github-id":"UCE_lALOJl1IZM6iinWPzl_60eE"},"target":"ec446746f8d478c0231a4258c58fd688c7938e815e12f998a09639a3ec3fac50","message":"Using Aerospace got me thinking about this problem.  Here's a refinement of the comment above for review.  If accepted, maybe I'd take a stab at a PR.\n\n- Workspace IDs remain as they are: _immutable_ and _unique_.\n- New workspace _aliases_ occupy a different namespace from IDs and are _mutable_ and _unique_.\n- By default, a workspace is created with an alias identical to its ID (so you don't have to think about an empty alias).\n- A prefix can be used to be explicit about reference \"id: \" or \"alias:\"; otherwise, a plain string looks first for an alias and then for an id to reference a workspace.  This approach disallows a colon in the workspace name.  Another character could be chosen, or we could have a delimiter for the colon.\n- You can change a workspace alias to any other one that isn't already used.\n- Alternatively, if you try to rename a workspace to an alias already given to another workspace, the workspace aliases are atomically swapped, maintaining uniqueness.  Swapping is a valuable workspace reordering operation.\n- `workspace list-workspaces` would \n  - be given an `--aliases` switch to report aliases instead of IDs\n  - have `--format` accept a new `%{alias}` option to get clarity on the assigned alias.\n\nMy hope with this design is to\n- minimize impact to code and configurations already in place\n- allow people to opt out of using the new aliases\n- make for a design that allows people to not worry about the implementation of aliases and primarily work under the illusion that workspaces are renamable (the \"id:\" and \"alias:\" lookup is mostly for API completeness and rigor than something I see myself using).\n\nOr maybe this whole approach is complex enough that it would be easier just to make IDs properly mutable. Aliases, though, provide more flexibility for rendering/ordering. For example, I could order my workspaces by ID but render alias names on SketchyBar.","files":null},{"type":6,"timestamp":1742070498,"nonce":"et8CXchqRBv9WidYAKz8IMFR/AU=","metadata":{"github-id":"UCE_lALOJl1IZM6iinWPzl_61cw"},"target":"ec446746f8d478c0231a4258c58fd688c7938e815e12f998a09639a3ec3fac50","message":"Using Aerospace got me thinking about this problem.  Here's a refinement of the comment above for review.  If accepted, maybe I'd take a stab at a PR.\n\n- Workspace IDs remain as they are: _immutable_ and _unique_.\n- New workspace _aliases_ occupy a different namespace from IDs and are _mutable_ and _unique_.\n- By default, a workspace is created with an alias identical to its ID (so you don't have to think about an empty alias).\n- A prefix can be used to be explicit about reference \"id: \" or \"alias:\"; otherwise, a plain string looks first for an alias and then for an id to reference a workspace.  This approach disallows user prefixes of \"id:\" or \"alias:\" for IDs or aliases (otherwise too confusing).  I don't see much loss there.\n- You can change a workspace alias to any other one that isn't already used.\n- Alternatively, if you try to rename a workspace to an alias already given to another workspace, the workspace aliases are atomically swapped, maintaining uniqueness.  Swapping is a valuable workspace reordering operation.\n- `workspace list-workspaces` would \n  - be given an `--aliases` switch to report aliases instead of IDs\n  - have `--format` accept a new `%{alias}` option to get clarity on the assigned alias.\n\nMy hope with this design is to\n- minimize impact to code and configurations already in place\n- allow people to opt out of using the new aliases\n- make for a design that allows people to not worry about the implementation of aliases and primarily work under the illusion that workspaces are renamable (the \"id:\" and \"alias:\" lookup is mostly for API completeness and rigor than something I see myself using).\n\nOr maybe this whole approach is complex enough that it would be easier just to make IDs properly mutable. Aliases, though, provide more flexibility for rendering/ordering. For example, I could order my workspaces by ID but render alias names on SketchyBar.","files":null},{"type":6,"timestamp":1742070541,"nonce":"9bi6YOdHp+KCabORjy0EOQN2h9c=","metadata":{"github-id":"UCE_lALOJl1IZM6iinWPzl_61n8"},"target":"ec446746f8d478c0231a4258c58fd688c7938e815e12f998a09639a3ec3fac50","message":"Using Aerospace got me thinking about this problem again.  Here's a refinement of the comment above for review.  If accepted, maybe I'd take a stab at a PR.\n\n- Workspace IDs remain as they are: _immutable_ and _unique_.\n- New workspace _aliases_ occupy a different namespace from IDs and are _mutable_ and _unique_.\n- By default, a workspace is created with an alias identical to its ID (so you don't have to think about an empty alias).\n- A prefix can be used to be explicit about reference \"id: \" or \"alias:\"; otherwise, a plain string looks first for an alias and then for an id to reference a workspace.  This approach disallows user prefixes of \"id:\" or \"alias:\" for IDs or aliases (otherwise too confusing).  I don't see much loss there.\n- You can change a workspace alias to any other one that isn't already used.\n- Alternatively, if you try to rename a workspace to an alias already given to another workspace, the workspace aliases are atomically swapped, maintaining uniqueness.  Swapping is a valuable workspace reordering operation.\n- `workspace list-workspaces` would \n  - be given an `--aliases` switch to report aliases instead of IDs\n  - have `--format` accept a new `%{alias}` option to get clarity on the assigned alias.\n\nMy hope with this design is to\n- minimize impact to code and configurations already in place\n- allow people to opt out of using the new aliases\n- make for a design that allows people to not worry about the implementation of aliases and primarily work under the illusion that workspaces are renamable (the \"id:\" and \"alias:\" lookup is mostly for API completeness and rigor than something I see myself using).\n\nOr maybe this whole approach is complex enough that it would be easier just to make IDs properly mutable. Aliases, though, provide more flexibility for rendering/ordering. For example, I could order my workspaces by ID but render alias names on SketchyBar.","files":null},{"type":3,"timestamp":1742097841,"nonce":"6ziaKfH9NInW1g51FPeT268ntOY=","metadata":{"github-id":"IC_kwDOJl1IZM6ijWFM","github-url":"https://github.com/nikitabobko/AeroSpace/issues/245#issuecomment-2727174476"},"message":"I still had this tab up, and I reread @nikitabobko's replies.  I was reading too fast before.  The \"tag\" idea is the same as my \"alias.\"\n\nI was more focused on this comment:\n\n\u003e It's not easy to implement, because a lot of code relies on the fact that workspace name is unique immutable identifier\n\nI don't understand why this makes it hard to implement.  I'd just let everything proceed as before.  The tag/alias idea would only apply to new features that want to look up the ID to by the tag/alias.","files":null}]}