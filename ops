{"author":{"id":"88013fa5cdb14e372cd5bc7ff2336dc6f6f51fd055c35e17f4888ba4a8fdf1bb"},"ops":[{"type":3,"timestamp":1724743531,"nonce":"Gxj4T0ggIquDoq/90Wow50wBkKw=","metadata":{"github-id":"IC_kwDOJl1IZM6JyrRO","github-url":"https://github.com/nikitabobko/AeroSpace/issues/320#issuecomment-2311763022"},"message":"### Derivation\n```nix\n{ stdenv, fetchzip, installShellFiles }:\n\nstdenv.mkDerivation rec {\n  pname = \"aerospace\";\n  version = \"0.14.2-Beta\";\n  nativeBuildInputs = [ installShellFiles ];\n  buildPhase = \"\";\n  installPhase = ''\n    mkdir -p $out/bin\n    cp bin/aerospace $out/bin\n\n    mkdir -p $out/Applications\n    cp -r AeroSpace.app $out/Applications/AeroSpace.app\n\n    installManPage manpage/*\n  '';\n\n  src = fetchzip {\n    url =\n      \"https://github.com/nikitabobko/AeroSpace/releases/download/v${version}/AeroSpace-v${version}.zip\";\n    hash = \"sha256-v2D/IV9Va0zbGHEwSGt6jvDqQYqha290Lm6u+nZTS3A=\";\n  };\n}\n```\n\nOptions:\n```nix\n{ config, lib, pkgs, osConfig, ... }:\n\nwith lib;\nlet\n  inherit (pkgs) system;\n  inherit (osConfig.flake.packages.${system}) aerospace;\n\n  cfg = config.programs.aerospace;\n  tomlFormat = pkgs.formats.toml { };\nin {\n  options = {\n    programs.aerospace = {\n      enable = mkEnableOption \"an i3-like window manager for macOS\";\n\n      package = mkOption {\n        type = types.package;\n        default = aerospace;\n        description = \"The aerospace package to install.\";\n      };\n\n      settings = mkOption {\n        inherit (tomlFormat) type;\n        default = { };\n        description = \"Configuration for aerospace.\";\n      };\n\n      enableJankyBorders = mkOption {\n        type = types.bool;\n        default = true;\n        description = \"Enable the JankyBorders package alongside aerospace.\";\n      };\n\n      jankybordersPackage = mkOption {\n        type = types.package;\n        default = pkgs.jankyborders;\n        description = \"The JankyBorders package to install.\";\n      };\n\n      aerospaceAppPath = mkOption {\n        type = types.str;\n        default = \"${cfg.package}/Applications/AeroSpace.app\";\n        description = \"Path to the Aerospace.app bundle.\";\n      };\n\n      runOnStartup = mkOption {\n        type = types.bool;\n        default = true;\n        description = \"Run AeroSpace.app on startup.\";\n      };\n    };\n  };\n\n  config = mkIf cfg.enable {\n    home.packages = [ cfg.package ]\n      ++ lib.optional cfg.enableJankyBorders cfg.jankybordersPackage;\n\n    xdg.configFile = {\n      \"aerospace/aerospace.toml\" = mkIf (cfg.settings != { }) {\n        source = tomlFormat.generate \"config\" cfg.settings;\n      };\n    };\n  };\n}\n```\n\n### Example Config\n```nix\n{ pkgs, ... }: {\n  imports = [ ./aerospace.nix ];\n  programs.aerospace = {\n    enable = true;\n\n    settings = {\n      start-at-login = true;\n\n      # Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization\n      enable-normalization-flatten-containers = false;\n      enable-normalization-opposite-orientation-for-nested-containers = false;\n      after-startup-command = [\n        \"exec-and-forget ${pkgs.jankyborders}/bin/borders style=round width=10 active_color=0xffeba0ac\"\n      ];\n\n      # Window detection. See: https://nikitabobko.github.io/AeroSpace/guide.html#on-window-detected-callback\n      # Common app ids: https://nikitabobko.github.io/AeroSpace/goodness#popular-apps-ids\n      # This is a workaround for apps that have no window decorations not being detected.\n      on-window-detected = [\n        {\n          ${\"if\"}.app-id = \"net.kovidgoyal.kitty\";\n          run = \"layout tiling\";\n        }\n        {\n          ${\"if\"}.app-id = \"com.brave.Browser\";\n          run = \"layout tiling\";\n        }\n      ];\n\n      workspace-to-monitor-force-assignment = {\n        \"1\" = [ \"C34H89x\" 2 3 ];\n        \"2\" = [ \"C34H89x\" 2 3 ];\n        \"3\" = [ \"C34H89x\" 2 3 ];\n        \"4\" = [ \"^built-in retina display$\" ];\n        \"5\" = [ \"^built-in retina display$\" ];\n      };\n\n      gaps = {\n        inner = {\n          horizontal = 10;\n          vertical = 10;\n        };\n        outer = {\n          left = 10;\n          bottom = 10;\n          top = 10;\n          right = 10;\n        };\n      };\n\n      # All possible keys:\n      # - Letters.        a, b, c, ..., z\n      # - Numbers.        0, 1, 2, ..., 9\n      # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9\n      # - F-keys.         f1, f2, ..., f20\n      # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,\n      #                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab\n      # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,\n      #                   keypadMinus, keypadMultiply, keypadPlus\n      # - Arrows.         left, down, up, right\n\n      mode = {\n        main.binding = {\n          \"alt-h\" = [ ]; # Disable alt-h hiding windows\n          \"alt-f\" =\n            \"flatten-workspace-tree\"; # The oh-shit I fucked up, hit reset button\n          \"alt-q\" = \"close\";\n          \"alt-slash\" = \"layout tiles horizontal vertical\";\n\n          # Focus active window in direction\n          \"alt-left\" =\n            \"focus left --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors\";\n          \"alt-down\" = \"focus down\";\n          \"alt-up\" = \"focus up\";\n          \"alt-right\" =\n            \"focus right --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors\";\n\n          # move a window in direction\n          \"alt-shift-left\" = \"move left\";\n          \"alt-shift-down\" = \"move down\";\n          \"alt-shift-up\" = \"move up\";\n          \"alt-shift-right\" = \"move right\";\n\n          # Move window to a monitor in general direction\n          \"alt-shift-ctrl-left\" = \"move-node-to-monitor left\";\n          \"alt-shift-ctrl-down\" = \"move-node-to-monitor down\";\n          \"alt-shift-ctrl-up\" = \"move-node-to-monitor up\";\n          \"alt-shift-ctrl-right\" = \"move-node-to-monitor right\";\n\n          # Cycle through workspaces\n          \"alt-tab\" = \"workspace-back-and-forth\";\n\n          # Float a window\n          \"alt-shift-f\" = \"layout floating tiling\"; # \"floating toggle\" in i3\n\n          # Workspaces replace MacOS native Virtual Desktops\n          \"alt-1\" = \"workspace 1\";\n          \"alt-2\" = \"workspace 2\";\n          \"alt-3\" = \"workspace 3\";\n          \"alt-4\" = \"workspace 4\";\n          \"alt-5\" = \"workspace 5\";\n          \"alt-6\" = \"workspace 6\";\n          \"alt-7\" = \"workspace 7\";\n          \"alt-8\" = \"workspace 8\";\n          \"alt-9\" = \"workspace 9\";\n          \"alt-0\" = \"workspace 10\";\n\n          \"alt-shift-1\" = \"move-node-to-workspace 1\";\n          \"alt-shift-2\" = \"move-node-to-workspace 2\";\n          \"alt-shift-3\" = \"move-node-to-workspace 3\";\n          \"alt-shift-4\" = \"move-node-to-workspace 4\";\n          \"alt-shift-5\" = \"move-node-to-workspace 5\";\n          \"alt-shift-6\" = \"move-node-to-workspace 6\";\n          \"alt-shift-7\" = \"move-node-to-workspace 7\";\n          \"alt-shift-8\" = \"move-node-to-workspace 8\";\n          \"alt-shift-9\" = \"move-node-to-workspace 9\";\n          \"alt-shift-0\" = \"move-node-to-workspace 10\";\n\n          \"alt-r\" = \"mode resize\";\n        };\n\n        resize.binding = {\n          \"left\" = \"resize width -50\";\n          \"up\" = \"resize height +50\";\n          \"down\" = \"resize height -50\";\n          \"right\" = \"resize width +50\";\n          \"enter\" = \"mode main\";\n          \"esc\" = \"mode main\";\n        };\n      };\n\n    };\n  };\n}\n```\n\nPick the meat off the bones all you like ðŸ˜ƒ \n\nOnly part I'm having issues with it getting the `on-window-detected` TOML conversion perfect.\n\n```nix\non-window-detected = [\n  {\n    \"if.app-id\" = \"net.kovidgoyal.kitty\";\n    run = \"layout tiling\";\n  }\n  {\n    \"if.app-id\" = \"com.brave.Browser\";\n    run = \"layout tiling\";\n  }\n];\n```\n\nAbove should work in theory, but doesn't seem to like the quotes in generated TOML.","files":null},{"type":6,"timestamp":1724743578,"nonce":"UCwIFeIsLigBrGDnbieBtsnpa4E=","metadata":{"github-id":"UCE_lALOJl1IZM6JyrROzk4rHe0"},"target":"0f1a87e81f3f28b7e68a85f081b5c2fd2e999bd880a2f1fed1b68c4234b2aca4","message":"### Derivation\n```nix\n{ stdenv, fetchzip, installShellFiles }:\n\nstdenv.mkDerivation rec {\n  pname = \"aerospace\";\n  version = \"0.14.2-Beta\";\n  nativeBuildInputs = [ installShellFiles ];\n  buildPhase = \"\";\n  installPhase = ''\n    mkdir -p $out/bin\n    cp bin/aerospace $out/bin\n\n    mkdir -p $out/Applications\n    cp -r AeroSpace.app $out/Applications/AeroSpace.app\n\n    installManPage manpage/*\n  '';\n\n  src = fetchzip {\n    url =\n      \"https://github.com/nikitabobko/AeroSpace/releases/download/v${version}/AeroSpace-v${version}.zip\";\n    hash = \"sha256-v2D/IV9Va0zbGHEwSGt6jvDqQYqha290Lm6u+nZTS3A=\";\n  };\n}\n```\n\nOptions:\n```nix\n{ config, lib, pkgs, osConfig, ... }:\n\nwith lib;\nlet\n  inherit (pkgs) system;\n  inherit (osConfig.flake.packages.${system}) aerospace;\n\n  cfg = config.programs.aerospace;\n  tomlFormat = pkgs.formats.toml { };\nin {\n  options = {\n    programs.aerospace = {\n      enable = mkEnableOption \"an i3-like window manager for macOS\";\n\n      package = mkOption {\n        type = types.package;\n        default = aerospace;\n        description = \"The aerospace package to install.\";\n      };\n\n      settings = mkOption {\n        inherit (tomlFormat) type;\n        default = { };\n        description = \"Configuration for aerospace.\";\n      };\n\n      enableJankyBorders = mkOption {\n        type = types.bool;\n        default = true;\n        description = \"Enable the JankyBorders package alongside aerospace.\";\n      };\n\n      jankybordersPackage = mkOption {\n        type = types.package;\n        default = pkgs.jankyborders;\n        description = \"The JankyBorders package to install.\";\n      };\n\n      aerospaceAppPath = mkOption {\n        type = types.str;\n        default = \"${cfg.package}/Applications/AeroSpace.app\";\n        description = \"Path to the Aerospace.app bundle.\";\n      };\n\n      runOnStartup = mkOption {\n        type = types.bool;\n        default = true;\n        description = \"Run AeroSpace.app on startup.\";\n      };\n    };\n  };\n\n  config = mkIf cfg.enable {\n    home.packages = [ cfg.package ]\n      ++ lib.optional cfg.enableJankyBorders cfg.jankybordersPackage;\n\n    xdg.configFile = {\n      \"aerospace/aerospace.toml\" = mkIf (cfg.settings != { }) {\n        source = tomlFormat.generate \"config\" cfg.settings;\n      };\n    };\n  };\n}\n```\n\n### Example Config\n```nix\n{ pkgs, ... }: {\n  imports = [ ./aerospace.nix ];\n  programs.aerospace = {\n    enable = true;\n\n    settings = {\n      # Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization\n      enable-normalization-flatten-containers = false;\n      enable-normalization-opposite-orientation-for-nested-containers = false;\n      after-startup-command = [\n        \"exec-and-forget ${pkgs.jankyborders}/bin/borders style=round width=10 active_color=0xffeba0ac\"\n      ];\n\n      # Window detection. See: https://nikitabobko.github.io/AeroSpace/guide.html#on-window-detected-callback\n      # Common app ids: https://nikitabobko.github.io/AeroSpace/goodness#popular-apps-ids\n      # This is a workaround for apps that have no window decorations not being detected.\n      on-window-detected = [\n        {\n          ${\"if\"}.app-id = \"net.kovidgoyal.kitty\";\n          run = \"layout tiling\";\n        }\n        {\n          ${\"if\"}.app-id = \"com.brave.Browser\";\n          run = \"layout tiling\";\n        }\n      ];\n\n      workspace-to-monitor-force-assignment = {\n        \"1\" = [ \"C34H89x\" 2 3 ];\n        \"2\" = [ \"C34H89x\" 2 3 ];\n        \"3\" = [ \"C34H89x\" 2 3 ];\n        \"4\" = [ \"^built-in retina display$\" ];\n        \"5\" = [ \"^built-in retina display$\" ];\n      };\n\n      gaps = {\n        inner = {\n          horizontal = 10;\n          vertical = 10;\n        };\n        outer = {\n          left = 10;\n          bottom = 10;\n          top = 10;\n          right = 10;\n        };\n      };\n\n      # All possible keys:\n      # - Letters.        a, b, c, ..., z\n      # - Numbers.        0, 1, 2, ..., 9\n      # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9\n      # - F-keys.         f1, f2, ..., f20\n      # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,\n      #                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab\n      # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,\n      #                   keypadMinus, keypadMultiply, keypadPlus\n      # - Arrows.         left, down, up, right\n\n      mode = {\n        main.binding = {\n          \"alt-h\" = [ ]; # Disable alt-h hiding windows\n          \"alt-f\" =\n            \"flatten-workspace-tree\"; # The oh-shit I fucked up, hit reset button\n          \"alt-q\" = \"close\";\n          \"alt-slash\" = \"layout tiles horizontal vertical\";\n\n          # Focus active window in direction\n          \"alt-left\" =\n            \"focus left --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors\";\n          \"alt-down\" = \"focus down\";\n          \"alt-up\" = \"focus up\";\n          \"alt-right\" =\n            \"focus right --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors\";\n\n          # move a window in direction\n          \"alt-shift-left\" = \"move left\";\n          \"alt-shift-down\" = \"move down\";\n          \"alt-shift-up\" = \"move up\";\n          \"alt-shift-right\" = \"move right\";\n\n          # Move window to a monitor in general direction\n          \"alt-shift-ctrl-left\" = \"move-node-to-monitor left\";\n          \"alt-shift-ctrl-down\" = \"move-node-to-monitor down\";\n          \"alt-shift-ctrl-up\" = \"move-node-to-monitor up\";\n          \"alt-shift-ctrl-right\" = \"move-node-to-monitor right\";\n\n          # Cycle through workspaces\n          \"alt-tab\" = \"workspace-back-and-forth\";\n\n          # Float a window\n          \"alt-shift-f\" = \"layout floating tiling\"; # \"floating toggle\" in i3\n\n          # Workspaces replace MacOS native Virtual Desktops\n          \"alt-1\" = \"workspace 1\";\n          \"alt-2\" = \"workspace 2\";\n          \"alt-3\" = \"workspace 3\";\n          \"alt-4\" = \"workspace 4\";\n          \"alt-5\" = \"workspace 5\";\n          \"alt-6\" = \"workspace 6\";\n          \"alt-7\" = \"workspace 7\";\n          \"alt-8\" = \"workspace 8\";\n          \"alt-9\" = \"workspace 9\";\n          \"alt-0\" = \"workspace 10\";\n\n          \"alt-shift-1\" = \"move-node-to-workspace 1\";\n          \"alt-shift-2\" = \"move-node-to-workspace 2\";\n          \"alt-shift-3\" = \"move-node-to-workspace 3\";\n          \"alt-shift-4\" = \"move-node-to-workspace 4\";\n          \"alt-shift-5\" = \"move-node-to-workspace 5\";\n          \"alt-shift-6\" = \"move-node-to-workspace 6\";\n          \"alt-shift-7\" = \"move-node-to-workspace 7\";\n          \"alt-shift-8\" = \"move-node-to-workspace 8\";\n          \"alt-shift-9\" = \"move-node-to-workspace 9\";\n          \"alt-shift-0\" = \"move-node-to-workspace 10\";\n\n          \"alt-r\" = \"mode resize\";\n        };\n\n        resize.binding = {\n          \"left\" = \"resize width -50\";\n          \"up\" = \"resize height +50\";\n          \"down\" = \"resize height -50\";\n          \"right\" = \"resize width +50\";\n          \"enter\" = \"mode main\";\n          \"esc\" = \"mode main\";\n        };\n      };\n\n    };\n  };\n}\n```\n\nPick the meat off the bones all you like ðŸ˜ƒ \n\nOnly part I'm having issues with it getting the `on-window-detected` TOML conversion perfect.\n\n```nix\non-window-detected = [\n  {\n    \"if.app-id\" = \"net.kovidgoyal.kitty\";\n    run = \"layout tiling\";\n  }\n  {\n    \"if.app-id\" = \"com.brave.Browser\";\n    run = \"layout tiling\";\n  }\n];\n```\n\nAbove should work in theory, but doesn't seem to like the quotes in generated TOML.","files":null}]}