{"author":{"id":"2d08e4816aca0a07db9878f126b0e7f6d6f1362eb9bc4804be6b33ff8d0a19ec"},"ops":[{"type":6,"timestamp":1717858781,"nonce":"NReB6EwpeX5fa5cqxSToX1xGRm0=","metadata":{"github-id":"UCE_lAHOJl1IZM6Lk2Qozlz-z6Q"},"target":"81ed2286c924368f9ea631766b99771047e0a2d9ee525049620f9744fc76ad84","message":"AeroSpace already provides two normalizations (\"flatten-containers\" and \"opposite-orientation-for-nested-containers\")\n\nThe current mental model of normalizations can be extended to allow more types of normalizations. To completely replicate dynamic tiling window managers, it should be possible to change normalizations with command on per-workspace basis\n\nNormalizations to consider:\n- `floating`. All windows on the workspace are floating. \n  Open question: should the normalization remember and restore layout from the workspace where this normalization wasn't enabled?\n- `columns`\n- `rows`\n- `primay-others` (\"tall\" in Amethyst)\n- `others-primary` (\"tall-right\" in Amethyst)\n- `v-primary-others` (\"wide\" in Amethyst)\n- `v-others-primary`\n\nTo consider: file with declarative hierarchical normalization description (something like yaml, but probably not yaml)\n\nRelated: #228 #248 #256","files":null},{"type":6,"timestamp":1718620271,"nonce":"XRmDuh3cNQZdxfPs1+Sfd5jNuuk=","metadata":{"github-id":"UCE_lAHOJl1IZM6Lk2Qozl2as-g"},"target":"81ed2286c924368f9ea631766b99771047e0a2d9ee525049620f9744fc76ad84","message":"AeroSpace already provides two normalizations (\"flatten-containers\" and \"opposite-orientation-for-nested-containers\")\n\nThe current mental model of normalizations can be extended to allow more types of normalizations. To completely replicate dynamic tiling window managers, it should be possible to change normalizations with command on per-workspace basis\n\nNormalizations to consider:\n- `floating`. All windows on the workspace are floating. \n  Open question: should the normalization remember and restore layout from the workspace where this normalization wasn't enabled?\n- `columns`\n- `rows`\n- `primary-others` (\"tall\" in Amethyst)\n- `others-primary` (\"tall-right\" in Amethyst)\n- `v-primary-others` (\"wide\" in Amethyst)\n- `v-others-primary`\n\nTo consider: file with declarative hierarchical normalization description (something like yaml, but probably not yaml)\n\nRelated: #228 #248 #256","files":null},{"type":6,"timestamp":1735510963,"nonce":"bAo+Us/nv+yDqqmkdJ+NlrBcebU=","metadata":{"github-id":"UCE_lAHOJl1IZM6Lk2Qozm3Dj00"},"target":"81ed2286c924368f9ea631766b99771047e0a2d9ee525049620f9744fc76ad84","message":"AeroSpace already provides two normalizations (\"flatten-containers\" and \"opposite-orientation-for-nested-containers\")\n\nThe current mental model of normalizations can be extended to allow more types of normalizations. To completely replicate dynamic tiling window managers, it should be possible to change normalizations with command on per-workspace basis\n\nNormalizations to consider:\n- `floating`. All windows on the workspace are floating. \n  Open question: should the normalization remember and restore layout from the workspace where this normalization wasn't enabled?\n- `columns`\n- `rows`\n- `primary-others` (\"tall\" in Amethyst)\n- `others-primary` (\"tall-right\" in Amethyst)\n- `v-primary-others` (\"wide\" in Amethyst)\n- `v-others-primary`\n- `bsp`\n\nTo consider: file with declarative hierarchical normalization description (something like yaml, but probably not yaml)\n\nRelated: #228 #248 #256","files":null},{"type":5,"timestamp":1717858607,"nonce":"0TFl2u8nCPqnxdTXgbpEMyXb8IU=","metadata":{"github-id":"LE_lADOJl1IZM6Lk2QozwAAAAMMJXEN"},"added":["feature-proposal"],"removed":[]},{"type":5,"timestamp":1717858607,"nonce":"1mcKgL2xaV1mPIoGycklVoPrmhE=","metadata":{"github-id":"LE_lADOJl1IZM6Lk2QozwAAAAMMJXEP"},"added":["design-needed"],"removed":[]},{"type":2,"timestamp":1717858700,"nonce":"s8UtA6j13+iz9TDD6AaMsWI3gJk=","metadata":{"github-id":"RTE_lADOJl1IZM6Lk2QozwAAAAMMJXk2"},"title":"Feature proposal: More sophisticated per-workspace normalizations to replicate dynamic twm","was":"Feature proposal: More sophisticated per-workspace normalizations to replicate dynamic twm"},{"type":3,"timestamp":1719568534,"nonce":"z98EMSIjpXSiyhIdWlD/0zVeBX0=","metadata":{"github-id":"IC_kwDOJl1IZM6C7JE-","github-url":"https://github.com/nikitabobko/AeroSpace/issues/260#issuecomment-2196541758"},"message":"\u003e file with declarative hierarchical normalization description\n\nThe declarative file might look like this:\n```\n# columns\nh_tiles\n  others\n\n# rows\nv_tiles\n  others\n\n# primary-others\nh_tiles:\n  1\n  v_tiles\n    others\n\n# others-primary\nh_tiles\n  v_tiles\n    others\n  1\n\n# https://github.com/nikitabobko/AeroSpace/issues/261\nv_tiles\n  h_tiles\n    1\n    2\n    3\n  h_tiles\n    others\n    6\n    5\n    4\n```\n\nWindows fill in the number placeholders in order. Unfilled placeholders are \"collapsed\" (same as flatten-containers normalization). \"others\" is a special placeholder that always must be presented in the description. It \"swallows\" all the remaining windows\n\nUnfortunately, `floating` layout is not representable in this model, but maybe it's fine","files":null},{"type":6,"timestamp":1719590248,"nonce":"WlHihS+NS2kU2iwWJ1A//J46YQU=","metadata":{"github-id":"UCE_lALOJl1IZM6C7JE-zkmrCHM"},"target":"50d4e6573aeb62b553bdb1d255b2f57c53e24f283b5f60ca7a7fea98f78fdd56","message":"\u003e file with declarative hierarchical normalization description\n\nThe declarative file might look like this:\n```\n# columns\nh_tiles\n  others\n\n# rows\nv_tiles\n  others\n\n# primary-others\nh_tiles:\n  1\n  v_tiles\n    others\n\n# others-primary\nh_tiles\n  v_tiles\n    others\n  1\n\n# https://github.com/nikitabobko/AeroSpace/issues/261\nv_tiles\n  h_tiles\n    1\n    2\n    3\n  h_tiles\n    others-inverse\n    6\n    5\n    4\n```\n\nWindows fill in the number placeholders in order. Unfilled placeholders are \"collapsed\" (same as flatten-containers normalization). \"others\" is a special placeholder that always must be presented in the description. It \"swallows\" all the remaining windows\n\nUnfortunately, `floating` layout is not representable in this model, but maybe it's fine","files":null},{"type":6,"timestamp":1735511041,"nonce":"hf6drOO65YQMAL88cCJ6qD3sYGg=","metadata":{"github-id":"UCE_lALOJl1IZM6C7JE-zliiL3E"},"target":"50d4e6573aeb62b553bdb1d255b2f57c53e24f283b5f60ca7a7fea98f78fdd56","message":"\u003e file with declarative hierarchical normalization description\n\nThe declarative file might look like this:\n```\n# columns\nh_tiles\n  others\n\n# rows\nv_tiles\n  others\n\n# primary-others\nh_tiles:\n  1\n  v_tiles\n    others\n\n# others-primary\nh_tiles\n  v_tiles\n    others\n  1\n\n# https://github.com/nikitabobko/AeroSpace/issues/261\nv_tiles\n  h_tiles\n    1\n    2\n    3\n  h_tiles\n    others-inverse\n    6\n    5\n    4\n\n# bsp-horizontal\nh_tiles\n  1\n  v_tiles\n    2\n    h_tiles\n      3\n      v_tiles\n        4\n        others\n```\n\nWindows fill in the number placeholders in order. Unfilled placeholders are \"collapsed\" (same as flatten-containers normalization). \"others\" is a special placeholder that always must be presented in the description. It \"swallows\" all the remaining windows\n\nUnfortunately, `floating` layout is not representable in this model, but maybe it's fine","files":null},{"type":6,"timestamp":1735511372,"nonce":"sycwFf4bI2EbwY4Oj6xSmjpL3bw=","metadata":{"github-id":"UCE_lALOJl1IZM6C7JE-zliiM0I"},"target":"50d4e6573aeb62b553bdb1d255b2f57c53e24f283b5f60ca7a7fea98f78fdd56","message":"\u003e file with declarative hierarchical normalization description\n\nThe declarative file might look like this:\n```\n# columns\nh_tiles\n  others\n\n# rows\nv_tiles\n  others\n\n# primary-others\nh_tiles:\n  1\n  v_tiles\n    others\n\n# others-primary\nh_tiles\n  v_tiles\n    others\n  1\n\n# https://github.com/nikitabobko/AeroSpace/issues/261\nv_tiles\n  h_tiles\n    1\n    2\n    3\n  h_tiles\n    others-inverse\n    6\n    5\n    4\n\n# bsp-horizontal\nh_tiles\n  1\n  v_tiles\n    2\n    h_tiles\n      3\n      v_tiles\n        4\n        others\n```\n\nWindows fill in the number placeholders in order. Unfilled placeholders are \"collapsed\" (same as flatten-containers normalization). \"others\" is a special placeholder that always must be presented in the description. It \"swallows\" all the remaining windows\n\nUnfortunately, `floating` layout is not representable in this model, but maybe it's fine\n\nTo consider: the declarative file syntax should allow specifying weights","files":null},{"type":5,"timestamp":1730032973,"nonce":"XZXeyzAzP/m5GH4iymEml83ncNo=","metadata":{"github-id":"LE_lADOJl1IZM6Lk2QozwAAAAN5kDiZ"},"added":["triaged"],"removed":[]}]}